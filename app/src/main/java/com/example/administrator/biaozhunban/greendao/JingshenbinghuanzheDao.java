package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.Jingshenbinghuanzhe;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "JINGSHENBINGHUANZHE".
*/
public class JingshenbinghuanzheDao extends AbstractDao<Jingshenbinghuanzhe, Long> {

    public static final String TABLENAME = "JINGSHENBINGHUANZHE";

    /**
     * Properties of entity Jingshenbinghuanzhe.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Jsb_id = new Property(1, String.class, "jsb_id", false, "JSB_ID");
        public final static Property Na_id = new Property(2, String.class, "na_id", false, "NA_ID");
        public final static Property Jsb_jh_name = new Property(3, String.class, "jsb_jh_name", false, "JSB_JH_NAME");
        public final static Property Jsb_jh_rela = new Property(4, String.class, "jsb_jh_rela", false, "JSB_JH_RELA");
        public final static Property Jsb_jh_tel = new Property(5, String.class, "jsb_jh_tel", false, "JSB_JH_TEL");
        public final static Property Jsb_jh_address = new Property(6, String.class, "jsb_jh_address", false, "JSB_JH_ADDRESS");
        public final static Property Jsb_cwh_name = new Property(7, String.class, "jsb_cwh_name", false, "JSB_CWH_NAME");
        public final static Property Jsb_cwh_tel = new Property(8, String.class, "jsb_cwh_tel", false, "JSB_CWH_TEL");
        public final static Property Jsb_cwh_ifm = new Property(9, int.class, "jsb_cwh_ifm", false, "JSB_CWH_IFM");
        public final static Property Jsb_cwh_sign = new Property(10, String.class, "jsb_cwh_sign", false, "JSB_CWH_SIGN");
        public final static Property Jsb_cwh_signdata = new Property(11, String.class, "jsb_cwh_signdata", false, "JSB_CWH_SIGNDATA");
        public final static Property Jsb_initial_data = new Property(12, String.class, "jsb_initial_data", false, "JSB_INITIAL_DATA");
        public final static Property Symptom_id = new Property(13, int.class, "symptom_id", false, "SYMPTOM_ID");
        public final static Property Jsb_past_outpa = new Property(14, String.class, "jsb_past_outpa", false, "JSB_PAST_OUTPA");
        public final static Property Jsb_past_firstdata = new Property(15, String.class, "jsb_past_firstdata", false, "JSB_PAST_FIRSTDATA");
        public final static Property Jsb_past_more = new Property(16, int.class, "jsb_past_more", false, "JSB_PAST_MORE");
        public final static Property Jsb_current_result = new Property(17, String.class, "jsb_current_result", false, "JSB_CURRENT_RESULT");
        public final static Property Jsb_current_job = new Property(18, String.class, "jsb_current_job", false, "JSB_CURRENT_JOB");
        public final static Property Jsb_current_data = new Property(19, String.class, "jsb_current_data", false, "JSB_CURRENT_DATA");
        public final static Property Jsb_current_effect = new Property(20, String.class, "jsb_current_effect", false, "JSB_CURRENT_EFFECT");
        public final static Property Jsb_home = new Property(21, int.class, "jsb_home", false, "JSB_HOME");
        public final static Property Jsb_home1 = new Property(22, int.class, "jsb_home1", false, "JSB_HOME1");
        public final static Property Jsb_home2 = new Property(23, int.class, "jsb_home2", false, "JSB_HOME2");
        public final static Property Jsb_home3 = new Property(24, int.class, "jsb_home3", false, "JSB_HOME3");
        public final static Property Jsb_home4 = new Property(25, int.class, "jsb_home4", false, "JSB_HOME4");
        public final static Property Jsb_home5 = new Property(26, int.class, "jsb_home5", false, "JSB_HOME5");
        public final static Property Jsb_lock = new Property(27, int.class, "jsb_lock", false, "JSB_LOCK");
        public final static Property Jsb_money = new Property(28, int.class, "jsb_money", false, "JSB_MONEY");
        public final static Property Jsb_opinion = new Property(29, String.class, "jsb_opinion", false, "JSB_OPINION");
        public final static Property Jsb_data = new Property(30, String.class, "jsb_data", false, "JSB_DATA");
        public final static Property Jsb_doctor = new Property(31, String.class, "jsb_doctor", false, "JSB_DOCTOR");
        public final static Property CreateDate = new Property(32, String.class, "createDate", false, "CREATE_DATE");
    }


    public JingshenbinghuanzheDao(DaoConfig config) {
        super(config);
    }
    
    public JingshenbinghuanzheDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"JINGSHENBINGHUANZHE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"JSB_ID\" TEXT NOT NULL ," + // 1: jsb_id
                "\"NA_ID\" TEXT NOT NULL ," + // 2: na_id
                "\"JSB_JH_NAME\" TEXT," + // 3: jsb_jh_name
                "\"JSB_JH_RELA\" TEXT," + // 4: jsb_jh_rela
                "\"JSB_JH_TEL\" TEXT," + // 5: jsb_jh_tel
                "\"JSB_JH_ADDRESS\" TEXT," + // 6: jsb_jh_address
                "\"JSB_CWH_NAME\" TEXT," + // 7: jsb_cwh_name
                "\"JSB_CWH_TEL\" TEXT," + // 8: jsb_cwh_tel
                "\"JSB_CWH_IFM\" INTEGER NOT NULL ," + // 9: jsb_cwh_ifm
                "\"JSB_CWH_SIGN\" TEXT," + // 10: jsb_cwh_sign
                "\"JSB_CWH_SIGNDATA\" TEXT," + // 11: jsb_cwh_signdata
                "\"JSB_INITIAL_DATA\" TEXT," + // 12: jsb_initial_data
                "\"SYMPTOM_ID\" INTEGER NOT NULL ," + // 13: symptom_id
                "\"JSB_PAST_OUTPA\" TEXT," + // 14: jsb_past_outpa
                "\"JSB_PAST_FIRSTDATA\" TEXT," + // 15: jsb_past_firstdata
                "\"JSB_PAST_MORE\" INTEGER NOT NULL ," + // 16: jsb_past_more
                "\"JSB_CURRENT_RESULT\" TEXT," + // 17: jsb_current_result
                "\"JSB_CURRENT_JOB\" TEXT," + // 18: jsb_current_job
                "\"JSB_CURRENT_DATA\" TEXT," + // 19: jsb_current_data
                "\"JSB_CURRENT_EFFECT\" TEXT," + // 20: jsb_current_effect
                "\"JSB_HOME\" INTEGER NOT NULL ," + // 21: jsb_home
                "\"JSB_HOME1\" INTEGER NOT NULL ," + // 22: jsb_home1
                "\"JSB_HOME2\" INTEGER NOT NULL ," + // 23: jsb_home2
                "\"JSB_HOME3\" INTEGER NOT NULL ," + // 24: jsb_home3
                "\"JSB_HOME4\" INTEGER NOT NULL ," + // 25: jsb_home4
                "\"JSB_HOME5\" INTEGER NOT NULL ," + // 26: jsb_home5
                "\"JSB_LOCK\" INTEGER NOT NULL ," + // 27: jsb_lock
                "\"JSB_MONEY\" INTEGER NOT NULL ," + // 28: jsb_money
                "\"JSB_OPINION\" TEXT," + // 29: jsb_opinion
                "\"JSB_DATA\" TEXT," + // 30: jsb_data
                "\"JSB_DOCTOR\" TEXT," + // 31: jsb_doctor
                "\"CREATE_DATE\" TEXT);"); // 32: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"JINGSHENBINGHUANZHE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Jingshenbinghuanzhe entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJsb_id());
        stmt.bindString(3, entity.getNa_id());
 
        String jsb_jh_name = entity.getJsb_jh_name();
        if (jsb_jh_name != null) {
            stmt.bindString(4, jsb_jh_name);
        }
 
        String jsb_jh_rela = entity.getJsb_jh_rela();
        if (jsb_jh_rela != null) {
            stmt.bindString(5, jsb_jh_rela);
        }
 
        String jsb_jh_tel = entity.getJsb_jh_tel();
        if (jsb_jh_tel != null) {
            stmt.bindString(6, jsb_jh_tel);
        }
 
        String jsb_jh_address = entity.getJsb_jh_address();
        if (jsb_jh_address != null) {
            stmt.bindString(7, jsb_jh_address);
        }
 
        String jsb_cwh_name = entity.getJsb_cwh_name();
        if (jsb_cwh_name != null) {
            stmt.bindString(8, jsb_cwh_name);
        }
 
        String jsb_cwh_tel = entity.getJsb_cwh_tel();
        if (jsb_cwh_tel != null) {
            stmt.bindString(9, jsb_cwh_tel);
        }
        stmt.bindLong(10, entity.getJsb_cwh_ifm());
 
        String jsb_cwh_sign = entity.getJsb_cwh_sign();
        if (jsb_cwh_sign != null) {
            stmt.bindString(11, jsb_cwh_sign);
        }
 
        String jsb_cwh_signdata = entity.getJsb_cwh_signdata();
        if (jsb_cwh_signdata != null) {
            stmt.bindString(12, jsb_cwh_signdata);
        }
 
        String jsb_initial_data = entity.getJsb_initial_data();
        if (jsb_initial_data != null) {
            stmt.bindString(13, jsb_initial_data);
        }
        stmt.bindLong(14, entity.getSymptom_id());
 
        String jsb_past_outpa = entity.getJsb_past_outpa();
        if (jsb_past_outpa != null) {
            stmt.bindString(15, jsb_past_outpa);
        }
 
        String jsb_past_firstdata = entity.getJsb_past_firstdata();
        if (jsb_past_firstdata != null) {
            stmt.bindString(16, jsb_past_firstdata);
        }
        stmt.bindLong(17, entity.getJsb_past_more());
 
        String jsb_current_result = entity.getJsb_current_result();
        if (jsb_current_result != null) {
            stmt.bindString(18, jsb_current_result);
        }
 
        String jsb_current_job = entity.getJsb_current_job();
        if (jsb_current_job != null) {
            stmt.bindString(19, jsb_current_job);
        }
 
        String jsb_current_data = entity.getJsb_current_data();
        if (jsb_current_data != null) {
            stmt.bindString(20, jsb_current_data);
        }
 
        String jsb_current_effect = entity.getJsb_current_effect();
        if (jsb_current_effect != null) {
            stmt.bindString(21, jsb_current_effect);
        }
        stmt.bindLong(22, entity.getJsb_home());
        stmt.bindLong(23, entity.getJsb_home1());
        stmt.bindLong(24, entity.getJsb_home2());
        stmt.bindLong(25, entity.getJsb_home3());
        stmt.bindLong(26, entity.getJsb_home4());
        stmt.bindLong(27, entity.getJsb_home5());
        stmt.bindLong(28, entity.getJsb_lock());
        stmt.bindLong(29, entity.getJsb_money());
 
        String jsb_opinion = entity.getJsb_opinion();
        if (jsb_opinion != null) {
            stmt.bindString(30, jsb_opinion);
        }
 
        String jsb_data = entity.getJsb_data();
        if (jsb_data != null) {
            stmt.bindString(31, jsb_data);
        }
 
        String jsb_doctor = entity.getJsb_doctor();
        if (jsb_doctor != null) {
            stmt.bindString(32, jsb_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(33, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Jingshenbinghuanzhe entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJsb_id());
        stmt.bindString(3, entity.getNa_id());
 
        String jsb_jh_name = entity.getJsb_jh_name();
        if (jsb_jh_name != null) {
            stmt.bindString(4, jsb_jh_name);
        }
 
        String jsb_jh_rela = entity.getJsb_jh_rela();
        if (jsb_jh_rela != null) {
            stmt.bindString(5, jsb_jh_rela);
        }
 
        String jsb_jh_tel = entity.getJsb_jh_tel();
        if (jsb_jh_tel != null) {
            stmt.bindString(6, jsb_jh_tel);
        }
 
        String jsb_jh_address = entity.getJsb_jh_address();
        if (jsb_jh_address != null) {
            stmt.bindString(7, jsb_jh_address);
        }
 
        String jsb_cwh_name = entity.getJsb_cwh_name();
        if (jsb_cwh_name != null) {
            stmt.bindString(8, jsb_cwh_name);
        }
 
        String jsb_cwh_tel = entity.getJsb_cwh_tel();
        if (jsb_cwh_tel != null) {
            stmt.bindString(9, jsb_cwh_tel);
        }
        stmt.bindLong(10, entity.getJsb_cwh_ifm());
 
        String jsb_cwh_sign = entity.getJsb_cwh_sign();
        if (jsb_cwh_sign != null) {
            stmt.bindString(11, jsb_cwh_sign);
        }
 
        String jsb_cwh_signdata = entity.getJsb_cwh_signdata();
        if (jsb_cwh_signdata != null) {
            stmt.bindString(12, jsb_cwh_signdata);
        }
 
        String jsb_initial_data = entity.getJsb_initial_data();
        if (jsb_initial_data != null) {
            stmt.bindString(13, jsb_initial_data);
        }
        stmt.bindLong(14, entity.getSymptom_id());
 
        String jsb_past_outpa = entity.getJsb_past_outpa();
        if (jsb_past_outpa != null) {
            stmt.bindString(15, jsb_past_outpa);
        }
 
        String jsb_past_firstdata = entity.getJsb_past_firstdata();
        if (jsb_past_firstdata != null) {
            stmt.bindString(16, jsb_past_firstdata);
        }
        stmt.bindLong(17, entity.getJsb_past_more());
 
        String jsb_current_result = entity.getJsb_current_result();
        if (jsb_current_result != null) {
            stmt.bindString(18, jsb_current_result);
        }
 
        String jsb_current_job = entity.getJsb_current_job();
        if (jsb_current_job != null) {
            stmt.bindString(19, jsb_current_job);
        }
 
        String jsb_current_data = entity.getJsb_current_data();
        if (jsb_current_data != null) {
            stmt.bindString(20, jsb_current_data);
        }
 
        String jsb_current_effect = entity.getJsb_current_effect();
        if (jsb_current_effect != null) {
            stmt.bindString(21, jsb_current_effect);
        }
        stmt.bindLong(22, entity.getJsb_home());
        stmt.bindLong(23, entity.getJsb_home1());
        stmt.bindLong(24, entity.getJsb_home2());
        stmt.bindLong(25, entity.getJsb_home3());
        stmt.bindLong(26, entity.getJsb_home4());
        stmt.bindLong(27, entity.getJsb_home5());
        stmt.bindLong(28, entity.getJsb_lock());
        stmt.bindLong(29, entity.getJsb_money());
 
        String jsb_opinion = entity.getJsb_opinion();
        if (jsb_opinion != null) {
            stmt.bindString(30, jsb_opinion);
        }
 
        String jsb_data = entity.getJsb_data();
        if (jsb_data != null) {
            stmt.bindString(31, jsb_data);
        }
 
        String jsb_doctor = entity.getJsb_doctor();
        if (jsb_doctor != null) {
            stmt.bindString(32, jsb_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(33, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Jingshenbinghuanzhe readEntity(Cursor cursor, int offset) {
        Jingshenbinghuanzhe entity = new Jingshenbinghuanzhe( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // jsb_id
            cursor.getString(offset + 2), // na_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // jsb_jh_name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // jsb_jh_rela
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jsb_jh_tel
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // jsb_jh_address
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // jsb_cwh_name
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // jsb_cwh_tel
            cursor.getInt(offset + 9), // jsb_cwh_ifm
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // jsb_cwh_sign
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // jsb_cwh_signdata
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // jsb_initial_data
            cursor.getInt(offset + 13), // symptom_id
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // jsb_past_outpa
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // jsb_past_firstdata
            cursor.getInt(offset + 16), // jsb_past_more
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // jsb_current_result
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // jsb_current_job
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // jsb_current_data
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // jsb_current_effect
            cursor.getInt(offset + 21), // jsb_home
            cursor.getInt(offset + 22), // jsb_home1
            cursor.getInt(offset + 23), // jsb_home2
            cursor.getInt(offset + 24), // jsb_home3
            cursor.getInt(offset + 25), // jsb_home4
            cursor.getInt(offset + 26), // jsb_home5
            cursor.getInt(offset + 27), // jsb_lock
            cursor.getInt(offset + 28), // jsb_money
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // jsb_opinion
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // jsb_data
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // jsb_doctor
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Jingshenbinghuanzhe entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setJsb_id(cursor.getString(offset + 1));
        entity.setNa_id(cursor.getString(offset + 2));
        entity.setJsb_jh_name(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setJsb_jh_rela(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJsb_jh_tel(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setJsb_jh_address(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setJsb_cwh_name(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setJsb_cwh_tel(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setJsb_cwh_ifm(cursor.getInt(offset + 9));
        entity.setJsb_cwh_sign(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setJsb_cwh_signdata(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setJsb_initial_data(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSymptom_id(cursor.getInt(offset + 13));
        entity.setJsb_past_outpa(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setJsb_past_firstdata(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setJsb_past_more(cursor.getInt(offset + 16));
        entity.setJsb_current_result(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setJsb_current_job(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setJsb_current_data(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setJsb_current_effect(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setJsb_home(cursor.getInt(offset + 21));
        entity.setJsb_home1(cursor.getInt(offset + 22));
        entity.setJsb_home2(cursor.getInt(offset + 23));
        entity.setJsb_home3(cursor.getInt(offset + 24));
        entity.setJsb_home4(cursor.getInt(offset + 25));
        entity.setJsb_home5(cursor.getInt(offset + 26));
        entity.setJsb_lock(cursor.getInt(offset + 27));
        entity.setJsb_money(cursor.getInt(offset + 28));
        entity.setJsb_opinion(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setJsb_data(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setJsb_doctor(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setCreateDate(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Jingshenbinghuanzhe entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Jingshenbinghuanzhe entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Jingshenbinghuanzhe entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
