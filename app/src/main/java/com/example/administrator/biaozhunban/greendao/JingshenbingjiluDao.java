package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.Jingshenbingjilu;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "JINGSHENBINGJILU".
*/
public class JingshenbingjiluDao extends AbstractDao<Jingshenbingjilu, Long> {

    public static final String TABLENAME = "JINGSHENBINGJILU";

    /**
     * Properties of entity Jingshenbingjilu.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Jsb_f_id = new Property(1, String.class, "jsb_f_id", false, "JSB_F_ID");
        public final static Property Na_id = new Property(2, String.class, "na_id", false, "NA_ID");
        public final static Property Jsb_f_data = new Property(3, String.class, "jsb_f_data", false, "JSB_F_DATA");
        public final static Property Jsb_f_danger = new Property(4, int.class, "jsb_f_danger", false, "JSB_F_DANGER");
        public final static Property Symptom_id = new Property(5, int.class, "symptom_id", false, "SYMPTOM_ID");
        public final static Property Jsb_f_insight = new Property(6, int.class, "jsb_f_insight", false, "JSB_F_INSIGHT");
        public final static Property Jsb_f_sleep = new Property(7, int.class, "jsb_f_sleep", false, "JSB_F_SLEEP");
        public final static Property Jsb_f_diet = new Property(8, int.class, "jsb_f_diet", false, "JSB_F_DIET");
        public final static Property Jsb_f_life = new Property(9, int.class, "jsb_f_life", false, "JSB_F_LIFE");
        public final static Property Jsb_f_labour = new Property(10, int.class, "jsb_f_labour", false, "JSB_F_LABOUR");
        public final static Property Jsb_f_work = new Property(11, int.class, "jsb_f_work", false, "JSB_F_WORK");
        public final static Property Jsb_f_study = new Property(12, int.class, "jsb_f_study", false, "JSB_F_STUDY");
        public final static Property Jsb_f_world = new Property(13, int.class, "jsb_f_world", false, "JSB_F_WORLD");
        public final static Property Jsb_f_home = new Property(14, int.class, "jsb_f_home", false, "JSB_F_HOME");
        public final static Property Jsb_f_home1 = new Property(15, int.class, "jsb_f_home1", false, "JSB_F_HOME1");
        public final static Property Jsb_f_home2 = new Property(16, int.class, "jsb_f_home2", false, "JSB_F_HOME2");
        public final static Property Jsb_f_home3 = new Property(17, int.class, "jsb_f_home3", false, "JSB_F_HOME3");
        public final static Property Jsb_f_home4 = new Property(18, int.class, "jsb_f_home4", false, "JSB_F_HOME4");
        public final static Property Jsb_f_home5 = new Property(19, int.class, "jsb_f_home5", false, "JSB_F_HOME5");
        public final static Property Jsb_f_lock = new Property(20, int.class, "jsb_f_lock", false, "JSB_F_LOCK");
        public final static Property Jsb_f_leave = new Property(21, int.class, "jsb_f_leave", false, "JSB_F_LEAVE");
        public final static Property Jsb_f_lastdata = new Property(22, String.class, "jsb_f_lastdata", false, "JSB_F_LASTDATA");
        public final static Property Jsb_f_lab = new Property(23, int.class, "jsb_f_lab", false, "JSB_F_LAB");
        public final static Property Jsb_f_lab_detail = new Property(24, String.class, "jsb_f_lab_detail", false, "JSB_F_LAB_DETAIL");
        public final static Property Jsb_f_rct = new Property(25, int.class, "jsb_f_rct", false, "JSB_F_RCT");
        public final static Property Jsb_f_rct_detail = new Property(26, String.class, "jsb_f_rct_detail", false, "JSB_F_RCT_DETAIL");
        public final static Property Jsb_f_dose = new Property(27, int.class, "jsb_f_dose", false, "JSB_F_DOSE");
        public final static Property Jsb_f_effect = new Property(28, int.class, "jsb_f_effect", false, "JSB_F_EFFECT");
        public final static Property Jsb_f_referral = new Property(29, int.class, "jsb_f_referral", false, "JSB_F_REFERRAL");
        public final static Property Jsb_f_rf_cause = new Property(30, String.class, "jsb_f_rf_cause", false, "JSB_F_RF_CAUSE");
        public final static Property Jsb_f_rf_detail = new Property(31, String.class, "jsb_f_rf_detail", false, "JSB_F_RF_DETAIL");
        public final static Property Jsb_f_drug1 = new Property(32, String.class, "jsb_f_drug1", false, "JSB_F_DRUG1");
        public final static Property Jsb_f_drug1_num = new Property(33, String.class, "jsb_f_drug1_num", false, "JSB_F_DRUG1_NUM");
        public final static Property Jsb_f_drug1_amount = new Property(34, String.class, "jsb_f_drug1_amount", false, "JSB_F_DRUG1_AMOUNT");
        public final static Property Jsb_f_drug2 = new Property(35, String.class, "jsb_f_drug2", false, "JSB_F_DRUG2");
        public final static Property Jsb_f_drug2_num = new Property(36, String.class, "jsb_f_drug2_num", false, "JSB_F_DRUG2_NUM");
        public final static Property Jsb_f_drug2_amount = new Property(37, String.class, "jsb_f_drug2_amount", false, "JSB_F_DRUG2_AMOUNT");
        public final static Property Jsb_f_drug3 = new Property(38, String.class, "jsb_f_drug3", false, "JSB_F_DRUG3");
        public final static Property Jsb_f_drug3_num = new Property(39, String.class, "jsb_f_drug3_num", false, "JSB_F_DRUG3_NUM");
        public final static Property Jsb_f_drug3_amount = new Property(40, String.class, "jsb_f_drug3_amount", false, "JSB_F_DRUG3_AMOUNT");
        public final static Property Jsb_f_step = new Property(41, int.class, "jsb_f_step", false, "JSB_F_STEP");
        public final static Property Jsb_f_type = new Property(42, int.class, "jsb_f_type", false, "JSB_F_TYPE");
        public final static Property Jsb_f_nextdata = new Property(43, String.class, "jsb_f_nextdata", false, "JSB_F_NEXTDATA");
        public final static Property Jsb_f_doctor = new Property(44, String.class, "jsb_f_doctor", false, "JSB_F_DOCTOR");
        public final static Property CreateDate = new Property(45, String.class, "createDate", false, "CREATE_DATE");
    }


    public JingshenbingjiluDao(DaoConfig config) {
        super(config);
    }
    
    public JingshenbingjiluDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"JINGSHENBINGJILU\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"JSB_F_ID\" TEXT NOT NULL ," + // 1: jsb_f_id
                "\"NA_ID\" TEXT NOT NULL ," + // 2: na_id
                "\"JSB_F_DATA\" TEXT," + // 3: jsb_f_data
                "\"JSB_F_DANGER\" INTEGER NOT NULL ," + // 4: jsb_f_danger
                "\"SYMPTOM_ID\" INTEGER NOT NULL ," + // 5: symptom_id
                "\"JSB_F_INSIGHT\" INTEGER NOT NULL ," + // 6: jsb_f_insight
                "\"JSB_F_SLEEP\" INTEGER NOT NULL ," + // 7: jsb_f_sleep
                "\"JSB_F_DIET\" INTEGER NOT NULL ," + // 8: jsb_f_diet
                "\"JSB_F_LIFE\" INTEGER NOT NULL ," + // 9: jsb_f_life
                "\"JSB_F_LABOUR\" INTEGER NOT NULL ," + // 10: jsb_f_labour
                "\"JSB_F_WORK\" INTEGER NOT NULL ," + // 11: jsb_f_work
                "\"JSB_F_STUDY\" INTEGER NOT NULL ," + // 12: jsb_f_study
                "\"JSB_F_WORLD\" INTEGER NOT NULL ," + // 13: jsb_f_world
                "\"JSB_F_HOME\" INTEGER NOT NULL ," + // 14: jsb_f_home
                "\"JSB_F_HOME1\" INTEGER NOT NULL ," + // 15: jsb_f_home1
                "\"JSB_F_HOME2\" INTEGER NOT NULL ," + // 16: jsb_f_home2
                "\"JSB_F_HOME3\" INTEGER NOT NULL ," + // 17: jsb_f_home3
                "\"JSB_F_HOME4\" INTEGER NOT NULL ," + // 18: jsb_f_home4
                "\"JSB_F_HOME5\" INTEGER NOT NULL ," + // 19: jsb_f_home5
                "\"JSB_F_LOCK\" INTEGER NOT NULL ," + // 20: jsb_f_lock
                "\"JSB_F_LEAVE\" INTEGER NOT NULL ," + // 21: jsb_f_leave
                "\"JSB_F_LASTDATA\" TEXT," + // 22: jsb_f_lastdata
                "\"JSB_F_LAB\" INTEGER NOT NULL ," + // 23: jsb_f_lab
                "\"JSB_F_LAB_DETAIL\" TEXT," + // 24: jsb_f_lab_detail
                "\"JSB_F_RCT\" INTEGER NOT NULL ," + // 25: jsb_f_rct
                "\"JSB_F_RCT_DETAIL\" TEXT," + // 26: jsb_f_rct_detail
                "\"JSB_F_DOSE\" INTEGER NOT NULL ," + // 27: jsb_f_dose
                "\"JSB_F_EFFECT\" INTEGER NOT NULL ," + // 28: jsb_f_effect
                "\"JSB_F_REFERRAL\" INTEGER NOT NULL ," + // 29: jsb_f_referral
                "\"JSB_F_RF_CAUSE\" TEXT," + // 30: jsb_f_rf_cause
                "\"JSB_F_RF_DETAIL\" TEXT," + // 31: jsb_f_rf_detail
                "\"JSB_F_DRUG1\" TEXT," + // 32: jsb_f_drug1
                "\"JSB_F_DRUG1_NUM\" TEXT," + // 33: jsb_f_drug1_num
                "\"JSB_F_DRUG1_AMOUNT\" TEXT," + // 34: jsb_f_drug1_amount
                "\"JSB_F_DRUG2\" TEXT," + // 35: jsb_f_drug2
                "\"JSB_F_DRUG2_NUM\" TEXT," + // 36: jsb_f_drug2_num
                "\"JSB_F_DRUG2_AMOUNT\" TEXT," + // 37: jsb_f_drug2_amount
                "\"JSB_F_DRUG3\" TEXT," + // 38: jsb_f_drug3
                "\"JSB_F_DRUG3_NUM\" TEXT," + // 39: jsb_f_drug3_num
                "\"JSB_F_DRUG3_AMOUNT\" TEXT," + // 40: jsb_f_drug3_amount
                "\"JSB_F_STEP\" INTEGER NOT NULL ," + // 41: jsb_f_step
                "\"JSB_F_TYPE\" INTEGER NOT NULL ," + // 42: jsb_f_type
                "\"JSB_F_NEXTDATA\" TEXT," + // 43: jsb_f_nextdata
                "\"JSB_F_DOCTOR\" TEXT," + // 44: jsb_f_doctor
                "\"CREATE_DATE\" TEXT);"); // 45: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"JINGSHENBINGJILU\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Jingshenbingjilu entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJsb_f_id());
        stmt.bindString(3, entity.getNa_id());
 
        String jsb_f_data = entity.getJsb_f_data();
        if (jsb_f_data != null) {
            stmt.bindString(4, jsb_f_data);
        }
        stmt.bindLong(5, entity.getJsb_f_danger());
        stmt.bindLong(6, entity.getSymptom_id());
        stmt.bindLong(7, entity.getJsb_f_insight());
        stmt.bindLong(8, entity.getJsb_f_sleep());
        stmt.bindLong(9, entity.getJsb_f_diet());
        stmt.bindLong(10, entity.getJsb_f_life());
        stmt.bindLong(11, entity.getJsb_f_labour());
        stmt.bindLong(12, entity.getJsb_f_work());
        stmt.bindLong(13, entity.getJsb_f_study());
        stmt.bindLong(14, entity.getJsb_f_world());
        stmt.bindLong(15, entity.getJsb_f_home());
        stmt.bindLong(16, entity.getJsb_f_home1());
        stmt.bindLong(17, entity.getJsb_f_home2());
        stmt.bindLong(18, entity.getJsb_f_home3());
        stmt.bindLong(19, entity.getJsb_f_home4());
        stmt.bindLong(20, entity.getJsb_f_home5());
        stmt.bindLong(21, entity.getJsb_f_lock());
        stmt.bindLong(22, entity.getJsb_f_leave());
 
        String jsb_f_lastdata = entity.getJsb_f_lastdata();
        if (jsb_f_lastdata != null) {
            stmt.bindString(23, jsb_f_lastdata);
        }
        stmt.bindLong(24, entity.getJsb_f_lab());
 
        String jsb_f_lab_detail = entity.getJsb_f_lab_detail();
        if (jsb_f_lab_detail != null) {
            stmt.bindString(25, jsb_f_lab_detail);
        }
        stmt.bindLong(26, entity.getJsb_f_rct());
 
        String jsb_f_rct_detail = entity.getJsb_f_rct_detail();
        if (jsb_f_rct_detail != null) {
            stmt.bindString(27, jsb_f_rct_detail);
        }
        stmt.bindLong(28, entity.getJsb_f_dose());
        stmt.bindLong(29, entity.getJsb_f_effect());
        stmt.bindLong(30, entity.getJsb_f_referral());
 
        String jsb_f_rf_cause = entity.getJsb_f_rf_cause();
        if (jsb_f_rf_cause != null) {
            stmt.bindString(31, jsb_f_rf_cause);
        }
 
        String jsb_f_rf_detail = entity.getJsb_f_rf_detail();
        if (jsb_f_rf_detail != null) {
            stmt.bindString(32, jsb_f_rf_detail);
        }
 
        String jsb_f_drug1 = entity.getJsb_f_drug1();
        if (jsb_f_drug1 != null) {
            stmt.bindString(33, jsb_f_drug1);
        }
 
        String jsb_f_drug1_num = entity.getJsb_f_drug1_num();
        if (jsb_f_drug1_num != null) {
            stmt.bindString(34, jsb_f_drug1_num);
        }
 
        String jsb_f_drug1_amount = entity.getJsb_f_drug1_amount();
        if (jsb_f_drug1_amount != null) {
            stmt.bindString(35, jsb_f_drug1_amount);
        }
 
        String jsb_f_drug2 = entity.getJsb_f_drug2();
        if (jsb_f_drug2 != null) {
            stmt.bindString(36, jsb_f_drug2);
        }
 
        String jsb_f_drug2_num = entity.getJsb_f_drug2_num();
        if (jsb_f_drug2_num != null) {
            stmt.bindString(37, jsb_f_drug2_num);
        }
 
        String jsb_f_drug2_amount = entity.getJsb_f_drug2_amount();
        if (jsb_f_drug2_amount != null) {
            stmt.bindString(38, jsb_f_drug2_amount);
        }
 
        String jsb_f_drug3 = entity.getJsb_f_drug3();
        if (jsb_f_drug3 != null) {
            stmt.bindString(39, jsb_f_drug3);
        }
 
        String jsb_f_drug3_num = entity.getJsb_f_drug3_num();
        if (jsb_f_drug3_num != null) {
            stmt.bindString(40, jsb_f_drug3_num);
        }
 
        String jsb_f_drug3_amount = entity.getJsb_f_drug3_amount();
        if (jsb_f_drug3_amount != null) {
            stmt.bindString(41, jsb_f_drug3_amount);
        }
        stmt.bindLong(42, entity.getJsb_f_step());
        stmt.bindLong(43, entity.getJsb_f_type());
 
        String jsb_f_nextdata = entity.getJsb_f_nextdata();
        if (jsb_f_nextdata != null) {
            stmt.bindString(44, jsb_f_nextdata);
        }
 
        String jsb_f_doctor = entity.getJsb_f_doctor();
        if (jsb_f_doctor != null) {
            stmt.bindString(45, jsb_f_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(46, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Jingshenbingjilu entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJsb_f_id());
        stmt.bindString(3, entity.getNa_id());
 
        String jsb_f_data = entity.getJsb_f_data();
        if (jsb_f_data != null) {
            stmt.bindString(4, jsb_f_data);
        }
        stmt.bindLong(5, entity.getJsb_f_danger());
        stmt.bindLong(6, entity.getSymptom_id());
        stmt.bindLong(7, entity.getJsb_f_insight());
        stmt.bindLong(8, entity.getJsb_f_sleep());
        stmt.bindLong(9, entity.getJsb_f_diet());
        stmt.bindLong(10, entity.getJsb_f_life());
        stmt.bindLong(11, entity.getJsb_f_labour());
        stmt.bindLong(12, entity.getJsb_f_work());
        stmt.bindLong(13, entity.getJsb_f_study());
        stmt.bindLong(14, entity.getJsb_f_world());
        stmt.bindLong(15, entity.getJsb_f_home());
        stmt.bindLong(16, entity.getJsb_f_home1());
        stmt.bindLong(17, entity.getJsb_f_home2());
        stmt.bindLong(18, entity.getJsb_f_home3());
        stmt.bindLong(19, entity.getJsb_f_home4());
        stmt.bindLong(20, entity.getJsb_f_home5());
        stmt.bindLong(21, entity.getJsb_f_lock());
        stmt.bindLong(22, entity.getJsb_f_leave());
 
        String jsb_f_lastdata = entity.getJsb_f_lastdata();
        if (jsb_f_lastdata != null) {
            stmt.bindString(23, jsb_f_lastdata);
        }
        stmt.bindLong(24, entity.getJsb_f_lab());
 
        String jsb_f_lab_detail = entity.getJsb_f_lab_detail();
        if (jsb_f_lab_detail != null) {
            stmt.bindString(25, jsb_f_lab_detail);
        }
        stmt.bindLong(26, entity.getJsb_f_rct());
 
        String jsb_f_rct_detail = entity.getJsb_f_rct_detail();
        if (jsb_f_rct_detail != null) {
            stmt.bindString(27, jsb_f_rct_detail);
        }
        stmt.bindLong(28, entity.getJsb_f_dose());
        stmt.bindLong(29, entity.getJsb_f_effect());
        stmt.bindLong(30, entity.getJsb_f_referral());
 
        String jsb_f_rf_cause = entity.getJsb_f_rf_cause();
        if (jsb_f_rf_cause != null) {
            stmt.bindString(31, jsb_f_rf_cause);
        }
 
        String jsb_f_rf_detail = entity.getJsb_f_rf_detail();
        if (jsb_f_rf_detail != null) {
            stmt.bindString(32, jsb_f_rf_detail);
        }
 
        String jsb_f_drug1 = entity.getJsb_f_drug1();
        if (jsb_f_drug1 != null) {
            stmt.bindString(33, jsb_f_drug1);
        }
 
        String jsb_f_drug1_num = entity.getJsb_f_drug1_num();
        if (jsb_f_drug1_num != null) {
            stmt.bindString(34, jsb_f_drug1_num);
        }
 
        String jsb_f_drug1_amount = entity.getJsb_f_drug1_amount();
        if (jsb_f_drug1_amount != null) {
            stmt.bindString(35, jsb_f_drug1_amount);
        }
 
        String jsb_f_drug2 = entity.getJsb_f_drug2();
        if (jsb_f_drug2 != null) {
            stmt.bindString(36, jsb_f_drug2);
        }
 
        String jsb_f_drug2_num = entity.getJsb_f_drug2_num();
        if (jsb_f_drug2_num != null) {
            stmt.bindString(37, jsb_f_drug2_num);
        }
 
        String jsb_f_drug2_amount = entity.getJsb_f_drug2_amount();
        if (jsb_f_drug2_amount != null) {
            stmt.bindString(38, jsb_f_drug2_amount);
        }
 
        String jsb_f_drug3 = entity.getJsb_f_drug3();
        if (jsb_f_drug3 != null) {
            stmt.bindString(39, jsb_f_drug3);
        }
 
        String jsb_f_drug3_num = entity.getJsb_f_drug3_num();
        if (jsb_f_drug3_num != null) {
            stmt.bindString(40, jsb_f_drug3_num);
        }
 
        String jsb_f_drug3_amount = entity.getJsb_f_drug3_amount();
        if (jsb_f_drug3_amount != null) {
            stmt.bindString(41, jsb_f_drug3_amount);
        }
        stmt.bindLong(42, entity.getJsb_f_step());
        stmt.bindLong(43, entity.getJsb_f_type());
 
        String jsb_f_nextdata = entity.getJsb_f_nextdata();
        if (jsb_f_nextdata != null) {
            stmt.bindString(44, jsb_f_nextdata);
        }
 
        String jsb_f_doctor = entity.getJsb_f_doctor();
        if (jsb_f_doctor != null) {
            stmt.bindString(45, jsb_f_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(46, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Jingshenbingjilu readEntity(Cursor cursor, int offset) {
        Jingshenbingjilu entity = new Jingshenbingjilu( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // jsb_f_id
            cursor.getString(offset + 2), // na_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // jsb_f_data
            cursor.getInt(offset + 4), // jsb_f_danger
            cursor.getInt(offset + 5), // symptom_id
            cursor.getInt(offset + 6), // jsb_f_insight
            cursor.getInt(offset + 7), // jsb_f_sleep
            cursor.getInt(offset + 8), // jsb_f_diet
            cursor.getInt(offset + 9), // jsb_f_life
            cursor.getInt(offset + 10), // jsb_f_labour
            cursor.getInt(offset + 11), // jsb_f_work
            cursor.getInt(offset + 12), // jsb_f_study
            cursor.getInt(offset + 13), // jsb_f_world
            cursor.getInt(offset + 14), // jsb_f_home
            cursor.getInt(offset + 15), // jsb_f_home1
            cursor.getInt(offset + 16), // jsb_f_home2
            cursor.getInt(offset + 17), // jsb_f_home3
            cursor.getInt(offset + 18), // jsb_f_home4
            cursor.getInt(offset + 19), // jsb_f_home5
            cursor.getInt(offset + 20), // jsb_f_lock
            cursor.getInt(offset + 21), // jsb_f_leave
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // jsb_f_lastdata
            cursor.getInt(offset + 23), // jsb_f_lab
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // jsb_f_lab_detail
            cursor.getInt(offset + 25), // jsb_f_rct
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // jsb_f_rct_detail
            cursor.getInt(offset + 27), // jsb_f_dose
            cursor.getInt(offset + 28), // jsb_f_effect
            cursor.getInt(offset + 29), // jsb_f_referral
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // jsb_f_rf_cause
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // jsb_f_rf_detail
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // jsb_f_drug1
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // jsb_f_drug1_num
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // jsb_f_drug1_amount
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // jsb_f_drug2
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // jsb_f_drug2_num
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // jsb_f_drug2_amount
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // jsb_f_drug3
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // jsb_f_drug3_num
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // jsb_f_drug3_amount
            cursor.getInt(offset + 41), // jsb_f_step
            cursor.getInt(offset + 42), // jsb_f_type
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // jsb_f_nextdata
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // jsb_f_doctor
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Jingshenbingjilu entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setJsb_f_id(cursor.getString(offset + 1));
        entity.setNa_id(cursor.getString(offset + 2));
        entity.setJsb_f_data(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setJsb_f_danger(cursor.getInt(offset + 4));
        entity.setSymptom_id(cursor.getInt(offset + 5));
        entity.setJsb_f_insight(cursor.getInt(offset + 6));
        entity.setJsb_f_sleep(cursor.getInt(offset + 7));
        entity.setJsb_f_diet(cursor.getInt(offset + 8));
        entity.setJsb_f_life(cursor.getInt(offset + 9));
        entity.setJsb_f_labour(cursor.getInt(offset + 10));
        entity.setJsb_f_work(cursor.getInt(offset + 11));
        entity.setJsb_f_study(cursor.getInt(offset + 12));
        entity.setJsb_f_world(cursor.getInt(offset + 13));
        entity.setJsb_f_home(cursor.getInt(offset + 14));
        entity.setJsb_f_home1(cursor.getInt(offset + 15));
        entity.setJsb_f_home2(cursor.getInt(offset + 16));
        entity.setJsb_f_home3(cursor.getInt(offset + 17));
        entity.setJsb_f_home4(cursor.getInt(offset + 18));
        entity.setJsb_f_home5(cursor.getInt(offset + 19));
        entity.setJsb_f_lock(cursor.getInt(offset + 20));
        entity.setJsb_f_leave(cursor.getInt(offset + 21));
        entity.setJsb_f_lastdata(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setJsb_f_lab(cursor.getInt(offset + 23));
        entity.setJsb_f_lab_detail(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setJsb_f_rct(cursor.getInt(offset + 25));
        entity.setJsb_f_rct_detail(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setJsb_f_dose(cursor.getInt(offset + 27));
        entity.setJsb_f_effect(cursor.getInt(offset + 28));
        entity.setJsb_f_referral(cursor.getInt(offset + 29));
        entity.setJsb_f_rf_cause(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setJsb_f_rf_detail(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setJsb_f_drug1(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setJsb_f_drug1_num(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setJsb_f_drug1_amount(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setJsb_f_drug2(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setJsb_f_drug2_num(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setJsb_f_drug2_amount(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setJsb_f_drug3(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setJsb_f_drug3_num(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setJsb_f_drug3_amount(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setJsb_f_step(cursor.getInt(offset + 41));
        entity.setJsb_f_type(cursor.getInt(offset + 42));
        entity.setJsb_f_nextdata(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setJsb_f_doctor(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setCreateDate(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Jingshenbingjilu entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Jingshenbingjilu entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Jingshenbingjilu entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
