package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.JianKangJiaoYuJiLu;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "JIAN_KANG_JIAO_YU_JI_LU".
*/
public class JianKangJiaoYuJiLuDao extends AbstractDao<JianKangJiaoYuJiLu, Long> {

    public static final String TABLENAME = "JIAN_KANG_JIAO_YU_JI_LU";

    /**
     * Properties of entity JianKangJiaoYuJiLu.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Jkjy_id = new Property(1, String.class, "jkjy_id", false, "JKJY_ID");
        public final static Property Jkjy_hdrq = new Property(2, String.class, "jkjy_hdrq", false, "JKJY_HDRQ");
        public final static Property Jkjy_hddd = new Property(3, String.class, "jkjy_hddd", false, "JKJY_HDDD");
        public final static Property Jkjy_hdxs = new Property(4, String.class, "jkjy_hdxs", false, "JKJY_HDXS");
        public final static Property Jkjy_hdzt = new Property(5, String.class, "jkjy_hdzt", false, "JKJY_HDZT");
        public final static Property Jkjy_zzz = new Property(6, String.class, "jkjy_zzz", false, "JKJY_ZZZ");
        public final static Property Jkjy_jsrylb = new Property(7, String.class, "jkjy_jsrylb", false, "JKJY_JSRYLB");
        public final static Property Jkjy_jsrs = new Property(8, String.class, "jkjy_jsrs", false, "JKJY_JSRS");
        public final static Property Jkjy_zlffsl = new Property(9, String.class, "jkjy_zlffsl", false, "JKJY_ZLFFSL");
        public final static Property Jkjy_hdnr = new Property(10, String.class, "jkjy_hdnr", false, "JKJY_HDNR");
        public final static Property Jkjy_zjpj = new Property(11, String.class, "jkjy_zjpj", false, "JKJY_ZJPJ");
        public final static Property Jkjy_cdcl = new Property(12, int.class, "jkjy_cdcl", false, "JKJY_CDCL");
        public final static Property Jkjy_tbr = new Property(13, String.class, "jkjy_tbr", false, "JKJY_TBR");
        public final static Property Jkjy_fzr = new Property(14, String.class, "jkjy_fzr", false, "JKJY_FZR");
        public final static Property Jkjy_tbrq = new Property(15, String.class, "jkjy_tbrq", false, "JKJY_TBRQ");
        public final static Property CreateDate = new Property(16, String.class, "createDate", false, "CREATE_DATE");
    }


    public JianKangJiaoYuJiLuDao(DaoConfig config) {
        super(config);
    }
    
    public JianKangJiaoYuJiLuDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"JIAN_KANG_JIAO_YU_JI_LU\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"JKJY_ID\" TEXT NOT NULL ," + // 1: jkjy_id
                "\"JKJY_HDRQ\" TEXT," + // 2: jkjy_hdrq
                "\"JKJY_HDDD\" TEXT," + // 3: jkjy_hddd
                "\"JKJY_HDXS\" TEXT," + // 4: jkjy_hdxs
                "\"JKJY_HDZT\" TEXT," + // 5: jkjy_hdzt
                "\"JKJY_ZZZ\" TEXT," + // 6: jkjy_zzz
                "\"JKJY_JSRYLB\" TEXT," + // 7: jkjy_jsrylb
                "\"JKJY_JSRS\" TEXT," + // 8: jkjy_jsrs
                "\"JKJY_ZLFFSL\" TEXT," + // 9: jkjy_zlffsl
                "\"JKJY_HDNR\" TEXT," + // 10: jkjy_hdnr
                "\"JKJY_ZJPJ\" TEXT," + // 11: jkjy_zjpj
                "\"JKJY_CDCL\" INTEGER NOT NULL ," + // 12: jkjy_cdcl
                "\"JKJY_TBR\" TEXT," + // 13: jkjy_tbr
                "\"JKJY_FZR\" TEXT," + // 14: jkjy_fzr
                "\"JKJY_TBRQ\" TEXT," + // 15: jkjy_tbrq
                "\"CREATE_DATE\" TEXT);"); // 16: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"JIAN_KANG_JIAO_YU_JI_LU\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, JianKangJiaoYuJiLu entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJkjy_id());
 
        String jkjy_hdrq = entity.getJkjy_hdrq();
        if (jkjy_hdrq != null) {
            stmt.bindString(3, jkjy_hdrq);
        }
 
        String jkjy_hddd = entity.getJkjy_hddd();
        if (jkjy_hddd != null) {
            stmt.bindString(4, jkjy_hddd);
        }
 
        String jkjy_hdxs = entity.getJkjy_hdxs();
        if (jkjy_hdxs != null) {
            stmt.bindString(5, jkjy_hdxs);
        }
 
        String jkjy_hdzt = entity.getJkjy_hdzt();
        if (jkjy_hdzt != null) {
            stmt.bindString(6, jkjy_hdzt);
        }
 
        String jkjy_zzz = entity.getJkjy_zzz();
        if (jkjy_zzz != null) {
            stmt.bindString(7, jkjy_zzz);
        }
 
        String jkjy_jsrylb = entity.getJkjy_jsrylb();
        if (jkjy_jsrylb != null) {
            stmt.bindString(8, jkjy_jsrylb);
        }
 
        String jkjy_jsrs = entity.getJkjy_jsrs();
        if (jkjy_jsrs != null) {
            stmt.bindString(9, jkjy_jsrs);
        }
 
        String jkjy_zlffsl = entity.getJkjy_zlffsl();
        if (jkjy_zlffsl != null) {
            stmt.bindString(10, jkjy_zlffsl);
        }
 
        String jkjy_hdnr = entity.getJkjy_hdnr();
        if (jkjy_hdnr != null) {
            stmt.bindString(11, jkjy_hdnr);
        }
 
        String jkjy_zjpj = entity.getJkjy_zjpj();
        if (jkjy_zjpj != null) {
            stmt.bindString(12, jkjy_zjpj);
        }
        stmt.bindLong(13, entity.getJkjy_cdcl());
 
        String jkjy_tbr = entity.getJkjy_tbr();
        if (jkjy_tbr != null) {
            stmt.bindString(14, jkjy_tbr);
        }
 
        String jkjy_fzr = entity.getJkjy_fzr();
        if (jkjy_fzr != null) {
            stmt.bindString(15, jkjy_fzr);
        }
 
        String jkjy_tbrq = entity.getJkjy_tbrq();
        if (jkjy_tbrq != null) {
            stmt.bindString(16, jkjy_tbrq);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(17, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, JianKangJiaoYuJiLu entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getJkjy_id());
 
        String jkjy_hdrq = entity.getJkjy_hdrq();
        if (jkjy_hdrq != null) {
            stmt.bindString(3, jkjy_hdrq);
        }
 
        String jkjy_hddd = entity.getJkjy_hddd();
        if (jkjy_hddd != null) {
            stmt.bindString(4, jkjy_hddd);
        }
 
        String jkjy_hdxs = entity.getJkjy_hdxs();
        if (jkjy_hdxs != null) {
            stmt.bindString(5, jkjy_hdxs);
        }
 
        String jkjy_hdzt = entity.getJkjy_hdzt();
        if (jkjy_hdzt != null) {
            stmt.bindString(6, jkjy_hdzt);
        }
 
        String jkjy_zzz = entity.getJkjy_zzz();
        if (jkjy_zzz != null) {
            stmt.bindString(7, jkjy_zzz);
        }
 
        String jkjy_jsrylb = entity.getJkjy_jsrylb();
        if (jkjy_jsrylb != null) {
            stmt.bindString(8, jkjy_jsrylb);
        }
 
        String jkjy_jsrs = entity.getJkjy_jsrs();
        if (jkjy_jsrs != null) {
            stmt.bindString(9, jkjy_jsrs);
        }
 
        String jkjy_zlffsl = entity.getJkjy_zlffsl();
        if (jkjy_zlffsl != null) {
            stmt.bindString(10, jkjy_zlffsl);
        }
 
        String jkjy_hdnr = entity.getJkjy_hdnr();
        if (jkjy_hdnr != null) {
            stmt.bindString(11, jkjy_hdnr);
        }
 
        String jkjy_zjpj = entity.getJkjy_zjpj();
        if (jkjy_zjpj != null) {
            stmt.bindString(12, jkjy_zjpj);
        }
        stmt.bindLong(13, entity.getJkjy_cdcl());
 
        String jkjy_tbr = entity.getJkjy_tbr();
        if (jkjy_tbr != null) {
            stmt.bindString(14, jkjy_tbr);
        }
 
        String jkjy_fzr = entity.getJkjy_fzr();
        if (jkjy_fzr != null) {
            stmt.bindString(15, jkjy_fzr);
        }
 
        String jkjy_tbrq = entity.getJkjy_tbrq();
        if (jkjy_tbrq != null) {
            stmt.bindString(16, jkjy_tbrq);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(17, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public JianKangJiaoYuJiLu readEntity(Cursor cursor, int offset) {
        JianKangJiaoYuJiLu entity = new JianKangJiaoYuJiLu( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // jkjy_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // jkjy_hdrq
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // jkjy_hddd
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // jkjy_hdxs
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jkjy_hdzt
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // jkjy_zzz
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // jkjy_jsrylb
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // jkjy_jsrs
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // jkjy_zlffsl
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // jkjy_hdnr
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // jkjy_zjpj
            cursor.getInt(offset + 12), // jkjy_cdcl
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // jkjy_tbr
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // jkjy_fzr
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // jkjy_tbrq
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, JianKangJiaoYuJiLu entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setJkjy_id(cursor.getString(offset + 1));
        entity.setJkjy_hdrq(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setJkjy_hddd(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setJkjy_hdxs(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJkjy_hdzt(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setJkjy_zzz(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setJkjy_jsrylb(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setJkjy_jsrs(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setJkjy_zlffsl(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setJkjy_hdnr(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setJkjy_zjpj(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setJkjy_cdcl(cursor.getInt(offset + 12));
        entity.setJkjy_tbr(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setJkjy_fzr(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setJkjy_tbrq(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCreateDate(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(JianKangJiaoYuJiLu entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(JianKangJiaoYuJiLu entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(JianKangJiaoYuJiLu entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
