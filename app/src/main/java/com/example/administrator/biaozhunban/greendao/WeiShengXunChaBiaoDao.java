package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.WeiShengXunChaBiao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WEI_SHENG_XUN_CHA_BIAO".
*/
public class WeiShengXunChaBiaoDao extends AbstractDao<WeiShengXunChaBiao, Long> {

    public static final String TABLENAME = "WEI_SHENG_XUN_CHA_BIAO";

    /**
     * Properties of entity WeiShengXunChaBiao.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Wsxc_id = new Property(1, String.class, "wsxc_id", false, "WSXC_ID");
        public final static Property Wsxc_yljg = new Property(2, String.class, "wsxc_yljg", false, "WSXC_YLJG");
        public final static Property Wsxc_nd = new Property(3, String.class, "wsxc_nd", false, "WSXC_ND");
        public final static Property Wsxc_ddhnr = new Property(4, String.class, "wsxc_ddhnr", false, "WSXC_DDHNR");
        public final static Property Wsxc_zywt = new Property(5, String.class, "wsxc_zywt", false, "WSXC_ZYWT");
        public final static Property Wsxc_rq = new Property(6, String.class, "wsxc_rq", false, "WSXC_RQ");
        public final static Property Wsxc_xcr = new Property(7, String.class, "wsxc_xcr", false, "WSXC_XCR");
        public final static Property Wsxc_note = new Property(8, String.class, "wsxc_note", false, "WSXC_NOTE");
        public final static Property CreateDate = new Property(9, String.class, "createDate", false, "CREATE_DATE");
    }


    public WeiShengXunChaBiaoDao(DaoConfig config) {
        super(config);
    }
    
    public WeiShengXunChaBiaoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WEI_SHENG_XUN_CHA_BIAO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"WSXC_ID\" TEXT NOT NULL ," + // 1: wsxc_id
                "\"WSXC_YLJG\" TEXT," + // 2: wsxc_yljg
                "\"WSXC_ND\" TEXT," + // 3: wsxc_nd
                "\"WSXC_DDHNR\" TEXT," + // 4: wsxc_ddhnr
                "\"WSXC_ZYWT\" TEXT," + // 5: wsxc_zywt
                "\"WSXC_RQ\" TEXT," + // 6: wsxc_rq
                "\"WSXC_XCR\" TEXT," + // 7: wsxc_xcr
                "\"WSXC_NOTE\" TEXT," + // 8: wsxc_note
                "\"CREATE_DATE\" TEXT);"); // 9: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WEI_SHENG_XUN_CHA_BIAO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, WeiShengXunChaBiao entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getWsxc_id());
 
        String wsxc_yljg = entity.getWsxc_yljg();
        if (wsxc_yljg != null) {
            stmt.bindString(3, wsxc_yljg);
        }
 
        String wsxc_nd = entity.getWsxc_nd();
        if (wsxc_nd != null) {
            stmt.bindString(4, wsxc_nd);
        }
 
        String wsxc_ddhnr = entity.getWsxc_ddhnr();
        if (wsxc_ddhnr != null) {
            stmt.bindString(5, wsxc_ddhnr);
        }
 
        String wsxc_zywt = entity.getWsxc_zywt();
        if (wsxc_zywt != null) {
            stmt.bindString(6, wsxc_zywt);
        }
 
        String wsxc_rq = entity.getWsxc_rq();
        if (wsxc_rq != null) {
            stmt.bindString(7, wsxc_rq);
        }
 
        String wsxc_xcr = entity.getWsxc_xcr();
        if (wsxc_xcr != null) {
            stmt.bindString(8, wsxc_xcr);
        }
 
        String wsxc_note = entity.getWsxc_note();
        if (wsxc_note != null) {
            stmt.bindString(9, wsxc_note);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(10, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, WeiShengXunChaBiao entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getWsxc_id());
 
        String wsxc_yljg = entity.getWsxc_yljg();
        if (wsxc_yljg != null) {
            stmt.bindString(3, wsxc_yljg);
        }
 
        String wsxc_nd = entity.getWsxc_nd();
        if (wsxc_nd != null) {
            stmt.bindString(4, wsxc_nd);
        }
 
        String wsxc_ddhnr = entity.getWsxc_ddhnr();
        if (wsxc_ddhnr != null) {
            stmt.bindString(5, wsxc_ddhnr);
        }
 
        String wsxc_zywt = entity.getWsxc_zywt();
        if (wsxc_zywt != null) {
            stmt.bindString(6, wsxc_zywt);
        }
 
        String wsxc_rq = entity.getWsxc_rq();
        if (wsxc_rq != null) {
            stmt.bindString(7, wsxc_rq);
        }
 
        String wsxc_xcr = entity.getWsxc_xcr();
        if (wsxc_xcr != null) {
            stmt.bindString(8, wsxc_xcr);
        }
 
        String wsxc_note = entity.getWsxc_note();
        if (wsxc_note != null) {
            stmt.bindString(9, wsxc_note);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(10, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public WeiShengXunChaBiao readEntity(Cursor cursor, int offset) {
        WeiShengXunChaBiao entity = new WeiShengXunChaBiao( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // wsxc_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // wsxc_yljg
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // wsxc_nd
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // wsxc_ddhnr
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // wsxc_zywt
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // wsxc_rq
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // wsxc_xcr
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // wsxc_note
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, WeiShengXunChaBiao entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setWsxc_id(cursor.getString(offset + 1));
        entity.setWsxc_yljg(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setWsxc_nd(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setWsxc_ddhnr(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setWsxc_zywt(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setWsxc_rq(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setWsxc_xcr(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setWsxc_note(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCreateDate(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(WeiShengXunChaBiao entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(WeiShengXunChaBiao entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(WeiShengXunChaBiao entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
