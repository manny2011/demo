package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.Liangsuiertongjiankang;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LIANGSUIERTONGJIANKANG".
*/
public class LiangsuiertongjiankangDao extends AbstractDao<Liangsuiertongjiankang, Long> {

    public static final String TABLENAME = "LIANGSUIERTONGJIANKANG";

    /**
     * Properties of entity Liangsuiertongjiankang.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lsjk_id = new Property(1, String.class, "lsjk_id", false, "LSJK_ID");
        public final static Property Na_id = new Property(2, String.class, "na_id", false, "NA_ID");
        public final static Property Ls_months_age = new Property(3, int.class, "ls_months_age", false, "LS_MONTHS_AGE");
        public final static Property Ls_follow_date = new Property(4, String.class, "ls_follow_date", false, "LS_FOLLOW_DATE");
        public final static Property Hw_id = new Property(5, String.class, "hw_id", false, "HW_ID");
        public final static Property Ls_tizfy = new Property(6, int.class, "ls_tizfy", false, "LS_TIZFY");
        public final static Property Ls_sgfy = new Property(7, int.class, "ls_sgfy", false, "LS_SGFY");
        public final static Property Ls_mians = new Property(8, int.class, "ls_mians", false, "LS_MIANS");
        public final static Property Ls_mssm = new Property(9, String.class, "ls_mssm", false, "LS_MSSM");
        public final static Property Ls_pif = new Property(10, int.class, "ls_pif", false, "LS_PIF");
        public final static Property Ls_qianx = new Property(11, int.class, "ls_qianx", false, "LS_QIANX");
        public final static Property Ls_qxcmx = new Property(12, String.class, "ls_qxcmx", false, "LS_QXCMX");
        public final static Property Ls_qxcm = new Property(13, String.class, "ls_qxcm", false, "LS_QXCM");
        public final static Property Ls_ywg = new Property(14, int.class, "ls_ywg", false, "LS_YWG");
        public final static Property Ls_ewg = new Property(15, int.class, "ls_ewg", false, "LS_EWG");
        public final static Property Ls_tingl = new Property(16, int.class, "ls_tingl", false, "LS_TINGL");
        public final static Property Ls_cys = new Property(17, int.class, "ls_cys", false, "LS_CYS");
        public final static Property Ls_qcs = new Property(18, int.class, "ls_qcs", false, "LS_QCS");
        public final static Property Ls_xinf = new Property(19, int.class, "ls_xinf", false, "LS_XINF");
        public final static Property Ls_fub = new Property(20, int.class, "ls_fub", false, "LS_FUB");
        public final static Property Ls_siz = new Property(21, int.class, "ls_siz", false, "LS_SIZ");
        public final static Property Ls_but = new Property(22, int.class, "ls_but", false, "LS_BUT");
        public final static Property Ls_kjglz = new Property(23, int.class, "ls_kjglz", false, "LS_KJGLZ");
        public final static Property Xhdb_id = new Property(24, String.class, "xhdb_id", false, "XHDB_ID");
        public final static Property Ls_hwhd = new Property(25, String.class, "ls_hwhd", false, "LS_HWHD");
        public final static Property Ls_fyvd = new Property(26, String.class, "ls_fyvd", false, "LS_FYVD");
        public final static Property Ls_fypg = new Property(27, int.class, "ls_fypg", false, "LS_FYPG");
        public final static Property Ls_lcsfhb = new Property(28, int.class, "ls_lcsfhb", false, "LS_LCSFHB");
        public final static Property Ls_other = new Property(29, String.class, "ls_other", false, "LS_OTHER");
        public final static Property Ls_zzjy = new Property(30, int.class, "ls_zzjy", false, "LS_ZZJY");
        public final static Property Ls_zzyy = new Property(31, String.class, "ls_zzyy", false, "LS_ZZYY");
        public final static Property Ls_jgks = new Property(32, String.class, "ls_jgks", false, "LS_JGKS");
        public final static Property Ls_zhid = new Property(33, int.class, "ls_zhid", false, "LS_ZHID");
        public final static Property Ls_next_date = new Property(34, String.class, "ls_next_date", false, "LS_NEXT_DATE");
        public final static Property CreateDate = new Property(35, String.class, "createDate", false, "CREATE_DATE");
    }


    public LiangsuiertongjiankangDao(DaoConfig config) {
        super(config);
    }
    
    public LiangsuiertongjiankangDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LIANGSUIERTONGJIANKANG\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"LSJK_ID\" TEXT NOT NULL ," + // 1: lsjk_id
                "\"NA_ID\" TEXT," + // 2: na_id
                "\"LS_MONTHS_AGE\" INTEGER NOT NULL ," + // 3: ls_months_age
                "\"LS_FOLLOW_DATE\" TEXT," + // 4: ls_follow_date
                "\"HW_ID\" TEXT," + // 5: hw_id
                "\"LS_TIZFY\" INTEGER NOT NULL ," + // 6: ls_tizfy
                "\"LS_SGFY\" INTEGER NOT NULL ," + // 7: ls_sgfy
                "\"LS_MIANS\" INTEGER NOT NULL ," + // 8: ls_mians
                "\"LS_MSSM\" TEXT," + // 9: ls_mssm
                "\"LS_PIF\" INTEGER NOT NULL ," + // 10: ls_pif
                "\"LS_QIANX\" INTEGER NOT NULL ," + // 11: ls_qianx
                "\"LS_QXCMX\" TEXT," + // 12: ls_qxcmx
                "\"LS_QXCM\" TEXT," + // 13: ls_qxcm
                "\"LS_YWG\" INTEGER NOT NULL ," + // 14: ls_ywg
                "\"LS_EWG\" INTEGER NOT NULL ," + // 15: ls_ewg
                "\"LS_TINGL\" INTEGER NOT NULL ," + // 16: ls_tingl
                "\"LS_CYS\" INTEGER NOT NULL ," + // 17: ls_cys
                "\"LS_QCS\" INTEGER NOT NULL ," + // 18: ls_qcs
                "\"LS_XINF\" INTEGER NOT NULL ," + // 19: ls_xinf
                "\"LS_FUB\" INTEGER NOT NULL ," + // 20: ls_fub
                "\"LS_SIZ\" INTEGER NOT NULL ," + // 21: ls_siz
                "\"LS_BUT\" INTEGER NOT NULL ," + // 22: ls_but
                "\"LS_KJGLZ\" INTEGER NOT NULL ," + // 23: ls_kjglz
                "\"XHDB_ID\" TEXT," + // 24: xhdb_id
                "\"LS_HWHD\" TEXT," + // 25: ls_hwhd
                "\"LS_FYVD\" TEXT," + // 26: ls_fyvd
                "\"LS_FYPG\" INTEGER NOT NULL ," + // 27: ls_fypg
                "\"LS_LCSFHB\" INTEGER NOT NULL ," + // 28: ls_lcsfhb
                "\"LS_OTHER\" TEXT," + // 29: ls_other
                "\"LS_ZZJY\" INTEGER NOT NULL ," + // 30: ls_zzjy
                "\"LS_ZZYY\" TEXT," + // 31: ls_zzyy
                "\"LS_JGKS\" TEXT," + // 32: ls_jgks
                "\"LS_ZHID\" INTEGER NOT NULL ," + // 33: ls_zhid
                "\"LS_NEXT_DATE\" TEXT," + // 34: ls_next_date
                "\"CREATE_DATE\" TEXT);"); // 35: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LIANGSUIERTONGJIANKANG\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Liangsuiertongjiankang entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getLsjk_id());
 
        String na_id = entity.getNa_id();
        if (na_id != null) {
            stmt.bindString(3, na_id);
        }
        stmt.bindLong(4, entity.getLs_months_age());
 
        String ls_follow_date = entity.getLs_follow_date();
        if (ls_follow_date != null) {
            stmt.bindString(5, ls_follow_date);
        }
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(6, hw_id);
        }
        stmt.bindLong(7, entity.getLs_tizfy());
        stmt.bindLong(8, entity.getLs_sgfy());
        stmt.bindLong(9, entity.getLs_mians());
 
        String ls_mssm = entity.getLs_mssm();
        if (ls_mssm != null) {
            stmt.bindString(10, ls_mssm);
        }
        stmt.bindLong(11, entity.getLs_pif());
        stmt.bindLong(12, entity.getLs_qianx());
 
        String ls_qxcmx = entity.getLs_qxcmx();
        if (ls_qxcmx != null) {
            stmt.bindString(13, ls_qxcmx);
        }
 
        String ls_qxcm = entity.getLs_qxcm();
        if (ls_qxcm != null) {
            stmt.bindString(14, ls_qxcm);
        }
        stmt.bindLong(15, entity.getLs_ywg());
        stmt.bindLong(16, entity.getLs_ewg());
        stmt.bindLong(17, entity.getLs_tingl());
        stmt.bindLong(18, entity.getLs_cys());
        stmt.bindLong(19, entity.getLs_qcs());
        stmt.bindLong(20, entity.getLs_xinf());
        stmt.bindLong(21, entity.getLs_fub());
        stmt.bindLong(22, entity.getLs_siz());
        stmt.bindLong(23, entity.getLs_but());
        stmt.bindLong(24, entity.getLs_kjglz());
 
        String xhdb_id = entity.getXhdb_id();
        if (xhdb_id != null) {
            stmt.bindString(25, xhdb_id);
        }
 
        String ls_hwhd = entity.getLs_hwhd();
        if (ls_hwhd != null) {
            stmt.bindString(26, ls_hwhd);
        }
 
        String ls_fyvd = entity.getLs_fyvd();
        if (ls_fyvd != null) {
            stmt.bindString(27, ls_fyvd);
        }
        stmt.bindLong(28, entity.getLs_fypg());
        stmt.bindLong(29, entity.getLs_lcsfhb());
 
        String ls_other = entity.getLs_other();
        if (ls_other != null) {
            stmt.bindString(30, ls_other);
        }
        stmt.bindLong(31, entity.getLs_zzjy());
 
        String ls_zzyy = entity.getLs_zzyy();
        if (ls_zzyy != null) {
            stmt.bindString(32, ls_zzyy);
        }
 
        String ls_jgks = entity.getLs_jgks();
        if (ls_jgks != null) {
            stmt.bindString(33, ls_jgks);
        }
        stmt.bindLong(34, entity.getLs_zhid());
 
        String ls_next_date = entity.getLs_next_date();
        if (ls_next_date != null) {
            stmt.bindString(35, ls_next_date);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(36, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Liangsuiertongjiankang entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getLsjk_id());
 
        String na_id = entity.getNa_id();
        if (na_id != null) {
            stmt.bindString(3, na_id);
        }
        stmt.bindLong(4, entity.getLs_months_age());
 
        String ls_follow_date = entity.getLs_follow_date();
        if (ls_follow_date != null) {
            stmt.bindString(5, ls_follow_date);
        }
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(6, hw_id);
        }
        stmt.bindLong(7, entity.getLs_tizfy());
        stmt.bindLong(8, entity.getLs_sgfy());
        stmt.bindLong(9, entity.getLs_mians());
 
        String ls_mssm = entity.getLs_mssm();
        if (ls_mssm != null) {
            stmt.bindString(10, ls_mssm);
        }
        stmt.bindLong(11, entity.getLs_pif());
        stmt.bindLong(12, entity.getLs_qianx());
 
        String ls_qxcmx = entity.getLs_qxcmx();
        if (ls_qxcmx != null) {
            stmt.bindString(13, ls_qxcmx);
        }
 
        String ls_qxcm = entity.getLs_qxcm();
        if (ls_qxcm != null) {
            stmt.bindString(14, ls_qxcm);
        }
        stmt.bindLong(15, entity.getLs_ywg());
        stmt.bindLong(16, entity.getLs_ewg());
        stmt.bindLong(17, entity.getLs_tingl());
        stmt.bindLong(18, entity.getLs_cys());
        stmt.bindLong(19, entity.getLs_qcs());
        stmt.bindLong(20, entity.getLs_xinf());
        stmt.bindLong(21, entity.getLs_fub());
        stmt.bindLong(22, entity.getLs_siz());
        stmt.bindLong(23, entity.getLs_but());
        stmt.bindLong(24, entity.getLs_kjglz());
 
        String xhdb_id = entity.getXhdb_id();
        if (xhdb_id != null) {
            stmt.bindString(25, xhdb_id);
        }
 
        String ls_hwhd = entity.getLs_hwhd();
        if (ls_hwhd != null) {
            stmt.bindString(26, ls_hwhd);
        }
 
        String ls_fyvd = entity.getLs_fyvd();
        if (ls_fyvd != null) {
            stmt.bindString(27, ls_fyvd);
        }
        stmt.bindLong(28, entity.getLs_fypg());
        stmt.bindLong(29, entity.getLs_lcsfhb());
 
        String ls_other = entity.getLs_other();
        if (ls_other != null) {
            stmt.bindString(30, ls_other);
        }
        stmt.bindLong(31, entity.getLs_zzjy());
 
        String ls_zzyy = entity.getLs_zzyy();
        if (ls_zzyy != null) {
            stmt.bindString(32, ls_zzyy);
        }
 
        String ls_jgks = entity.getLs_jgks();
        if (ls_jgks != null) {
            stmt.bindString(33, ls_jgks);
        }
        stmt.bindLong(34, entity.getLs_zhid());
 
        String ls_next_date = entity.getLs_next_date();
        if (ls_next_date != null) {
            stmt.bindString(35, ls_next_date);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(36, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Liangsuiertongjiankang readEntity(Cursor cursor, int offset) {
        Liangsuiertongjiankang entity = new Liangsuiertongjiankang( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // lsjk_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // na_id
            cursor.getInt(offset + 3), // ls_months_age
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ls_follow_date
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // hw_id
            cursor.getInt(offset + 6), // ls_tizfy
            cursor.getInt(offset + 7), // ls_sgfy
            cursor.getInt(offset + 8), // ls_mians
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ls_mssm
            cursor.getInt(offset + 10), // ls_pif
            cursor.getInt(offset + 11), // ls_qianx
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // ls_qxcmx
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // ls_qxcm
            cursor.getInt(offset + 14), // ls_ywg
            cursor.getInt(offset + 15), // ls_ewg
            cursor.getInt(offset + 16), // ls_tingl
            cursor.getInt(offset + 17), // ls_cys
            cursor.getInt(offset + 18), // ls_qcs
            cursor.getInt(offset + 19), // ls_xinf
            cursor.getInt(offset + 20), // ls_fub
            cursor.getInt(offset + 21), // ls_siz
            cursor.getInt(offset + 22), // ls_but
            cursor.getInt(offset + 23), // ls_kjglz
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // xhdb_id
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // ls_hwhd
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // ls_fyvd
            cursor.getInt(offset + 27), // ls_fypg
            cursor.getInt(offset + 28), // ls_lcsfhb
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // ls_other
            cursor.getInt(offset + 30), // ls_zzjy
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // ls_zzyy
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // ls_jgks
            cursor.getInt(offset + 33), // ls_zhid
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // ls_next_date
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Liangsuiertongjiankang entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLsjk_id(cursor.getString(offset + 1));
        entity.setNa_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLs_months_age(cursor.getInt(offset + 3));
        entity.setLs_follow_date(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setHw_id(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setLs_tizfy(cursor.getInt(offset + 6));
        entity.setLs_sgfy(cursor.getInt(offset + 7));
        entity.setLs_mians(cursor.getInt(offset + 8));
        entity.setLs_mssm(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setLs_pif(cursor.getInt(offset + 10));
        entity.setLs_qianx(cursor.getInt(offset + 11));
        entity.setLs_qxcmx(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setLs_qxcm(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setLs_ywg(cursor.getInt(offset + 14));
        entity.setLs_ewg(cursor.getInt(offset + 15));
        entity.setLs_tingl(cursor.getInt(offset + 16));
        entity.setLs_cys(cursor.getInt(offset + 17));
        entity.setLs_qcs(cursor.getInt(offset + 18));
        entity.setLs_xinf(cursor.getInt(offset + 19));
        entity.setLs_fub(cursor.getInt(offset + 20));
        entity.setLs_siz(cursor.getInt(offset + 21));
        entity.setLs_but(cursor.getInt(offset + 22));
        entity.setLs_kjglz(cursor.getInt(offset + 23));
        entity.setXhdb_id(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setLs_hwhd(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setLs_fyvd(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setLs_fypg(cursor.getInt(offset + 27));
        entity.setLs_lcsfhb(cursor.getInt(offset + 28));
        entity.setLs_other(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setLs_zzjy(cursor.getInt(offset + 30));
        entity.setLs_zzyy(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setLs_jgks(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setLs_zhid(cursor.getInt(offset + 33));
        entity.setLs_next_date(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCreateDate(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Liangsuiertongjiankang entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Liangsuiertongjiankang entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Liangsuiertongjiankang entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
