package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.GaoXueYaHuanZhe;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "GAO_XUE_YA_HUAN_ZHE".
*/
public class GaoXueYaHuanZheDao extends AbstractDao<GaoXueYaHuanZhe, Long> {

    public static final String TABLENAME = "GAO_XUE_YA_HUAN_ZHE";

    /**
     * Properties of entity GaoXueYaHuanZhe.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Gxy_id = new Property(1, String.class, "gxy_id", false, "GXY_ID");
        public final static Property Na_id = new Property(2, String.class, "na_id", false, "NA_ID");
        public final static Property Gxy_data = new Property(3, String.class, "gxy_data", false, "GXY_DATA");
        public final static Property Gxy_type = new Property(4, String.class, "gxy_type", false, "GXY_TYPE");
        public final static Property Symptom_id = new Property(5, int.class, "symptom_id", false, "SYMPTOM_ID");
        public final static Property Bp_id = new Property(6, int.class, "bp_id", false, "BP_ID");
        public final static Property Hw_id = new Property(7, String.class, "hw_id", false, "HW_ID");
        public final static Property Spo_id = new Property(8, String.class, "spo_id", false, "SPO_ID");
        public final static Property Gxy_report = new Property(9, String.class, "gxy_report", false, "GXY_REPORT");
        public final static Property Gxy_sign = new Property(10, String.class, "gxy_sign", false, "GXY_SIGN");
        public final static Property Gxy_smoke = new Property(11, int.class, "gxy_smoke", false, "GXY_SMOKE");
        public final static Property Gxy_wine = new Property(12, int.class, "gxy_wine", false, "GXY_WINE");
        public final static Property Gxy_motion1 = new Property(13, int.class, "gxy_motion1", false, "GXY_MOTION1");
        public final static Property Gxy_motion2 = new Property(14, int.class, "gxy_motion2", false, "GXY_MOTION2");
        public final static Property Gxy_motion_target1 = new Property(15, int.class, "gxy_motion_target1", false, "GXY_MOTION_TARGET1");
        public final static Property Gxy_motion_target2 = new Property(16, int.class, "gxy_motion_target2", false, "GXY_MOTION_TARGET2");
        public final static Property Gxy_salt = new Property(17, int.class, "gxy_salt", false, "GXY_SALT");
        public final static Property Gxy_mind = new Property(18, int.class, "gxy_mind", false, "GXY_MIND");
        public final static Property Gxy_follow = new Property(19, int.class, "gxy_follow", false, "GXY_FOLLOW");
        public final static Property Gxy_assist = new Property(20, String.class, "gxy_assist", false, "GXY_ASSIST");
        public final static Property Gxy_dose = new Property(21, int.class, "gxy_dose", false, "GXY_DOSE");
        public final static Property Gxy_detail = new Property(22, int.class, "gxy_detail", false, "GXY_DETAIL");
        public final static Property Gxy_effect = new Property(23, int.class, "gxy_effect", false, "GXY_EFFECT");
        public final static Property Gxy_drug1 = new Property(24, int.class, "gxy_drug1", false, "GXY_DRUG1");
        public final static Property Gxy_drug1_num = new Property(25, int.class, "gxy_drug1_num", false, "GXY_DRUG1_NUM");
        public final static Property Gxy_drug1_amount = new Property(26, int.class, "gxy_drug1_amount", false, "GXY_DRUG1_AMOUNT");
        public final static Property Gxy_drug2 = new Property(27, int.class, "gxy_drug2", false, "GXY_DRUG2");
        public final static Property Gxy_drug2_num = new Property(28, int.class, "gxy_drug2_num", false, "GXY_DRUG2_NUM");
        public final static Property Gxy_drug2_amount = new Property(29, int.class, "gxy_drug2_amount", false, "GXY_DRUG2_AMOUNT");
        public final static Property Gxy_drug3 = new Property(30, int.class, "gxy_drug3", false, "GXY_DRUG3");
        public final static Property Gxy_drug3_num = new Property(31, int.class, "gxy_drug3_num", false, "GXY_DRUG3_NUM");
        public final static Property Gxy_drug3_amount = new Property(32, int.class, "gxy_drug3_amount", false, "GXY_DRUG3_AMOUNT");
        public final static Property Gxy_rf_cause = new Property(33, String.class, "gxy_rf_cause", false, "GXY_RF_CAUSE");
        public final static Property Gxy_rf_detail = new Property(34, String.class, "gxy_rf_detail", false, "GXY_RF_DETAIL");
        public final static Property Gxy_nextdata = new Property(35, String.class, "gxy_nextdata", false, "GXY_NEXTDATA");
        public final static Property Gxy_doctor = new Property(36, String.class, "gxy_doctor", false, "GXY_DOCTOR");
        public final static Property CreateDate = new Property(37, String.class, "createDate", false, "CREATE_DATE");
    }


    public GaoXueYaHuanZheDao(DaoConfig config) {
        super(config);
    }
    
    public GaoXueYaHuanZheDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"GAO_XUE_YA_HUAN_ZHE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"GXY_ID\" TEXT NOT NULL ," + // 1: gxy_id
                "\"NA_ID\" TEXT NOT NULL ," + // 2: na_id
                "\"GXY_DATA\" TEXT," + // 3: gxy_data
                "\"GXY_TYPE\" TEXT," + // 4: gxy_type
                "\"SYMPTOM_ID\" INTEGER NOT NULL ," + // 5: symptom_id
                "\"BP_ID\" INTEGER NOT NULL ," + // 6: bp_id
                "\"HW_ID\" TEXT," + // 7: hw_id
                "\"SPO_ID\" TEXT," + // 8: spo_id
                "\"GXY_REPORT\" TEXT," + // 9: gxy_report
                "\"GXY_SIGN\" TEXT," + // 10: gxy_sign
                "\"GXY_SMOKE\" INTEGER NOT NULL ," + // 11: gxy_smoke
                "\"GXY_WINE\" INTEGER NOT NULL ," + // 12: gxy_wine
                "\"GXY_MOTION1\" INTEGER NOT NULL ," + // 13: gxy_motion1
                "\"GXY_MOTION2\" INTEGER NOT NULL ," + // 14: gxy_motion2
                "\"GXY_MOTION_TARGET1\" INTEGER NOT NULL ," + // 15: gxy_motion_target1
                "\"GXY_MOTION_TARGET2\" INTEGER NOT NULL ," + // 16: gxy_motion_target2
                "\"GXY_SALT\" INTEGER NOT NULL ," + // 17: gxy_salt
                "\"GXY_MIND\" INTEGER NOT NULL ," + // 18: gxy_mind
                "\"GXY_FOLLOW\" INTEGER NOT NULL ," + // 19: gxy_follow
                "\"GXY_ASSIST\" TEXT," + // 20: gxy_assist
                "\"GXY_DOSE\" INTEGER NOT NULL ," + // 21: gxy_dose
                "\"GXY_DETAIL\" INTEGER NOT NULL ," + // 22: gxy_detail
                "\"GXY_EFFECT\" INTEGER NOT NULL ," + // 23: gxy_effect
                "\"GXY_DRUG1\" INTEGER NOT NULL ," + // 24: gxy_drug1
                "\"GXY_DRUG1_NUM\" INTEGER NOT NULL ," + // 25: gxy_drug1_num
                "\"GXY_DRUG1_AMOUNT\" INTEGER NOT NULL ," + // 26: gxy_drug1_amount
                "\"GXY_DRUG2\" INTEGER NOT NULL ," + // 27: gxy_drug2
                "\"GXY_DRUG2_NUM\" INTEGER NOT NULL ," + // 28: gxy_drug2_num
                "\"GXY_DRUG2_AMOUNT\" INTEGER NOT NULL ," + // 29: gxy_drug2_amount
                "\"GXY_DRUG3\" INTEGER NOT NULL ," + // 30: gxy_drug3
                "\"GXY_DRUG3_NUM\" INTEGER NOT NULL ," + // 31: gxy_drug3_num
                "\"GXY_DRUG3_AMOUNT\" INTEGER NOT NULL ," + // 32: gxy_drug3_amount
                "\"GXY_RF_CAUSE\" TEXT," + // 33: gxy_rf_cause
                "\"GXY_RF_DETAIL\" TEXT," + // 34: gxy_rf_detail
                "\"GXY_NEXTDATA\" TEXT," + // 35: gxy_nextdata
                "\"GXY_DOCTOR\" TEXT," + // 36: gxy_doctor
                "\"CREATE_DATE\" TEXT);"); // 37: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"GAO_XUE_YA_HUAN_ZHE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, GaoXueYaHuanZhe entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getGxy_id());
        stmt.bindString(3, entity.getNa_id());
 
        String gxy_data = entity.getGxy_data();
        if (gxy_data != null) {
            stmt.bindString(4, gxy_data);
        }
 
        String gxy_type = entity.getGxy_type();
        if (gxy_type != null) {
            stmt.bindString(5, gxy_type);
        }
        stmt.bindLong(6, entity.getSymptom_id());
        stmt.bindLong(7, entity.getBp_id());
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(8, hw_id);
        }
 
        String spo_id = entity.getSpo_id();
        if (spo_id != null) {
            stmt.bindString(9, spo_id);
        }
 
        String gxy_report = entity.getGxy_report();
        if (gxy_report != null) {
            stmt.bindString(10, gxy_report);
        }
 
        String gxy_sign = entity.getGxy_sign();
        if (gxy_sign != null) {
            stmt.bindString(11, gxy_sign);
        }
        stmt.bindLong(12, entity.getGxy_smoke());
        stmt.bindLong(13, entity.getGxy_wine());
        stmt.bindLong(14, entity.getGxy_motion1());
        stmt.bindLong(15, entity.getGxy_motion2());
        stmt.bindLong(16, entity.getGxy_motion_target1());
        stmt.bindLong(17, entity.getGxy_motion_target2());
        stmt.bindLong(18, entity.getGxy_salt());
        stmt.bindLong(19, entity.getGxy_mind());
        stmt.bindLong(20, entity.getGxy_follow());
 
        String gxy_assist = entity.getGxy_assist();
        if (gxy_assist != null) {
            stmt.bindString(21, gxy_assist);
        }
        stmt.bindLong(22, entity.getGxy_dose());
        stmt.bindLong(23, entity.getGxy_detail());
        stmt.bindLong(24, entity.getGxy_effect());
        stmt.bindLong(25, entity.getGxy_drug1());
        stmt.bindLong(26, entity.getGxy_drug1_num());
        stmt.bindLong(27, entity.getGxy_drug1_amount());
        stmt.bindLong(28, entity.getGxy_drug2());
        stmt.bindLong(29, entity.getGxy_drug2_num());
        stmt.bindLong(30, entity.getGxy_drug2_amount());
        stmt.bindLong(31, entity.getGxy_drug3());
        stmt.bindLong(32, entity.getGxy_drug3_num());
        stmt.bindLong(33, entity.getGxy_drug3_amount());
 
        String gxy_rf_cause = entity.getGxy_rf_cause();
        if (gxy_rf_cause != null) {
            stmt.bindString(34, gxy_rf_cause);
        }
 
        String gxy_rf_detail = entity.getGxy_rf_detail();
        if (gxy_rf_detail != null) {
            stmt.bindString(35, gxy_rf_detail);
        }
 
        String gxy_nextdata = entity.getGxy_nextdata();
        if (gxy_nextdata != null) {
            stmt.bindString(36, gxy_nextdata);
        }
 
        String gxy_doctor = entity.getGxy_doctor();
        if (gxy_doctor != null) {
            stmt.bindString(37, gxy_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(38, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, GaoXueYaHuanZhe entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getGxy_id());
        stmt.bindString(3, entity.getNa_id());
 
        String gxy_data = entity.getGxy_data();
        if (gxy_data != null) {
            stmt.bindString(4, gxy_data);
        }
 
        String gxy_type = entity.getGxy_type();
        if (gxy_type != null) {
            stmt.bindString(5, gxy_type);
        }
        stmt.bindLong(6, entity.getSymptom_id());
        stmt.bindLong(7, entity.getBp_id());
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(8, hw_id);
        }
 
        String spo_id = entity.getSpo_id();
        if (spo_id != null) {
            stmt.bindString(9, spo_id);
        }
 
        String gxy_report = entity.getGxy_report();
        if (gxy_report != null) {
            stmt.bindString(10, gxy_report);
        }
 
        String gxy_sign = entity.getGxy_sign();
        if (gxy_sign != null) {
            stmt.bindString(11, gxy_sign);
        }
        stmt.bindLong(12, entity.getGxy_smoke());
        stmt.bindLong(13, entity.getGxy_wine());
        stmt.bindLong(14, entity.getGxy_motion1());
        stmt.bindLong(15, entity.getGxy_motion2());
        stmt.bindLong(16, entity.getGxy_motion_target1());
        stmt.bindLong(17, entity.getGxy_motion_target2());
        stmt.bindLong(18, entity.getGxy_salt());
        stmt.bindLong(19, entity.getGxy_mind());
        stmt.bindLong(20, entity.getGxy_follow());
 
        String gxy_assist = entity.getGxy_assist();
        if (gxy_assist != null) {
            stmt.bindString(21, gxy_assist);
        }
        stmt.bindLong(22, entity.getGxy_dose());
        stmt.bindLong(23, entity.getGxy_detail());
        stmt.bindLong(24, entity.getGxy_effect());
        stmt.bindLong(25, entity.getGxy_drug1());
        stmt.bindLong(26, entity.getGxy_drug1_num());
        stmt.bindLong(27, entity.getGxy_drug1_amount());
        stmt.bindLong(28, entity.getGxy_drug2());
        stmt.bindLong(29, entity.getGxy_drug2_num());
        stmt.bindLong(30, entity.getGxy_drug2_amount());
        stmt.bindLong(31, entity.getGxy_drug3());
        stmt.bindLong(32, entity.getGxy_drug3_num());
        stmt.bindLong(33, entity.getGxy_drug3_amount());
 
        String gxy_rf_cause = entity.getGxy_rf_cause();
        if (gxy_rf_cause != null) {
            stmt.bindString(34, gxy_rf_cause);
        }
 
        String gxy_rf_detail = entity.getGxy_rf_detail();
        if (gxy_rf_detail != null) {
            stmt.bindString(35, gxy_rf_detail);
        }
 
        String gxy_nextdata = entity.getGxy_nextdata();
        if (gxy_nextdata != null) {
            stmt.bindString(36, gxy_nextdata);
        }
 
        String gxy_doctor = entity.getGxy_doctor();
        if (gxy_doctor != null) {
            stmt.bindString(37, gxy_doctor);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(38, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public GaoXueYaHuanZhe readEntity(Cursor cursor, int offset) {
        GaoXueYaHuanZhe entity = new GaoXueYaHuanZhe( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // gxy_id
            cursor.getString(offset + 2), // na_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // gxy_data
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // gxy_type
            cursor.getInt(offset + 5), // symptom_id
            cursor.getInt(offset + 6), // bp_id
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // hw_id
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // spo_id
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // gxy_report
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // gxy_sign
            cursor.getInt(offset + 11), // gxy_smoke
            cursor.getInt(offset + 12), // gxy_wine
            cursor.getInt(offset + 13), // gxy_motion1
            cursor.getInt(offset + 14), // gxy_motion2
            cursor.getInt(offset + 15), // gxy_motion_target1
            cursor.getInt(offset + 16), // gxy_motion_target2
            cursor.getInt(offset + 17), // gxy_salt
            cursor.getInt(offset + 18), // gxy_mind
            cursor.getInt(offset + 19), // gxy_follow
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // gxy_assist
            cursor.getInt(offset + 21), // gxy_dose
            cursor.getInt(offset + 22), // gxy_detail
            cursor.getInt(offset + 23), // gxy_effect
            cursor.getInt(offset + 24), // gxy_drug1
            cursor.getInt(offset + 25), // gxy_drug1_num
            cursor.getInt(offset + 26), // gxy_drug1_amount
            cursor.getInt(offset + 27), // gxy_drug2
            cursor.getInt(offset + 28), // gxy_drug2_num
            cursor.getInt(offset + 29), // gxy_drug2_amount
            cursor.getInt(offset + 30), // gxy_drug3
            cursor.getInt(offset + 31), // gxy_drug3_num
            cursor.getInt(offset + 32), // gxy_drug3_amount
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // gxy_rf_cause
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // gxy_rf_detail
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // gxy_nextdata
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // gxy_doctor
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, GaoXueYaHuanZhe entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setGxy_id(cursor.getString(offset + 1));
        entity.setNa_id(cursor.getString(offset + 2));
        entity.setGxy_data(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGxy_type(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setSymptom_id(cursor.getInt(offset + 5));
        entity.setBp_id(cursor.getInt(offset + 6));
        entity.setHw_id(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSpo_id(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGxy_report(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setGxy_sign(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setGxy_smoke(cursor.getInt(offset + 11));
        entity.setGxy_wine(cursor.getInt(offset + 12));
        entity.setGxy_motion1(cursor.getInt(offset + 13));
        entity.setGxy_motion2(cursor.getInt(offset + 14));
        entity.setGxy_motion_target1(cursor.getInt(offset + 15));
        entity.setGxy_motion_target2(cursor.getInt(offset + 16));
        entity.setGxy_salt(cursor.getInt(offset + 17));
        entity.setGxy_mind(cursor.getInt(offset + 18));
        entity.setGxy_follow(cursor.getInt(offset + 19));
        entity.setGxy_assist(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setGxy_dose(cursor.getInt(offset + 21));
        entity.setGxy_detail(cursor.getInt(offset + 22));
        entity.setGxy_effect(cursor.getInt(offset + 23));
        entity.setGxy_drug1(cursor.getInt(offset + 24));
        entity.setGxy_drug1_num(cursor.getInt(offset + 25));
        entity.setGxy_drug1_amount(cursor.getInt(offset + 26));
        entity.setGxy_drug2(cursor.getInt(offset + 27));
        entity.setGxy_drug2_num(cursor.getInt(offset + 28));
        entity.setGxy_drug2_amount(cursor.getInt(offset + 29));
        entity.setGxy_drug3(cursor.getInt(offset + 30));
        entity.setGxy_drug3_num(cursor.getInt(offset + 31));
        entity.setGxy_drug3_amount(cursor.getInt(offset + 32));
        entity.setGxy_rf_cause(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setGxy_rf_detail(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setGxy_nextdata(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setGxy_doctor(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCreateDate(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(GaoXueYaHuanZhe entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(GaoXueYaHuanZhe entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(GaoXueYaHuanZhe entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
