package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.ChuanRanBingLeiXing;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CHUAN_RAN_BING_LEI_XING".
*/
public class ChuanRanBingLeiXingDao extends AbstractDao<ChuanRanBingLeiXing, Long> {

    public static final String TABLENAME = "CHUAN_RAN_BING_LEI_XING";

    /**
     * Properties of entity ChuanRanBingLeiXing.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Crb_type_id = new Property(0, Long.class, "crb_type_id", true, "_id");
        public final static Property Crb_type_name = new Property(1, String.class, "crb_type_name", false, "CRB_TYPE_NAME");
        public final static Property CreateDate = new Property(2, String.class, "createDate", false, "CREATE_DATE");
    }


    public ChuanRanBingLeiXingDao(DaoConfig config) {
        super(config);
    }
    
    public ChuanRanBingLeiXingDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CHUAN_RAN_BING_LEI_XING\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: crb_type_id
                "\"CRB_TYPE_NAME\" TEXT," + // 1: crb_type_name
                "\"CREATE_DATE\" TEXT);"); // 2: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CHUAN_RAN_BING_LEI_XING\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ChuanRanBingLeiXing entity) {
        stmt.clearBindings();
 
        Long crb_type_id = entity.getCrb_type_id();
        if (crb_type_id != null) {
            stmt.bindLong(1, crb_type_id);
        }
 
        String crb_type_name = entity.getCrb_type_name();
        if (crb_type_name != null) {
            stmt.bindString(2, crb_type_name);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(3, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ChuanRanBingLeiXing entity) {
        stmt.clearBindings();
 
        Long crb_type_id = entity.getCrb_type_id();
        if (crb_type_id != null) {
            stmt.bindLong(1, crb_type_id);
        }
 
        String crb_type_name = entity.getCrb_type_name();
        if (crb_type_name != null) {
            stmt.bindString(2, crb_type_name);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(3, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ChuanRanBingLeiXing readEntity(Cursor cursor, int offset) {
        ChuanRanBingLeiXing entity = new ChuanRanBingLeiXing( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // crb_type_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // crb_type_name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ChuanRanBingLeiXing entity, int offset) {
        entity.setCrb_type_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCrb_type_name(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCreateDate(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ChuanRanBingLeiXing entity, long rowId) {
        entity.setCrb_type_id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ChuanRanBingLeiXing entity) {
        if(entity != null) {
            return entity.getCrb_type_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ChuanRanBingLeiXing entity) {
        return entity.getCrb_type_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
