package com.example.administrator.biaozhunban.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.administrator.biaozhunban.greendao.entity.TangNiaoBing;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TANG_NIAO_BING".
*/
public class TangNiaoBingDao extends AbstractDao<TangNiaoBing, Long> {

    public static final String TABLENAME = "TANG_NIAO_BING";

    /**
     * Properties of entity TangNiaoBing.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Tnb_id = new Property(1, String.class, "tnb_id", false, "TNB_ID");
        public final static Property Na_id = new Property(2, String.class, "na_id", false, "NA_ID");
        public final static Property Tnb_Referral = new Property(3, String.class, "tnb_Referral", false, "TNB__REFERRAL");
        public final static Property Tnb_Agencies_departments = new Property(4, String.class, "tnb_Agencies_departments", false, "TNB__AGENCIES_DEPARTMENTS");
        public final static Property Tnb_next_follow = new Property(5, String.class, "tnb_next_follow", false, "TNB_NEXT_FOLLOW");
        public final static Property Tnb_doctor_follow = new Property(6, String.class, "tnb_doctor_follow", false, "TNB_DOCTOR_FOLLOW");
        public final static Property Tnb_Drug_use1 = new Property(7, String.class, "tnb_Drug_use1", false, "TNB__DRUG_USE1");
        public final static Property Tnb_Drug_use2 = new Property(8, String.class, "tnb_Drug_use2", false, "TNB__DRUG_USE2");
        public final static Property Tnb_Drug_use3 = new Property(9, String.class, "tnb_Drug_use3", false, "TNB__DRUG_USE3");
        public final static Property Tnb_Drug_use4 = new Property(10, String.class, "tnb_Drug_use4", false, "TNB__DRUG_USE4");
        public final static Property Tnb_Drug_use5 = new Property(11, String.class, "tnb_Drug_use5", false, "TNB__DRUG_USE5");
        public final static Property Tnb_everyday1 = new Property(12, int.class, "tnb_everyday1", false, "TNB_EVERYDAY1");
        public final static Property Tnb_everyday2 = new Property(13, int.class, "tnb_everyday2", false, "TNB_EVERYDAY2");
        public final static Property Tnb_everyday3 = new Property(14, int.class, "tnb_everyday3", false, "TNB_EVERYDAY3");
        public final static Property Tnb_everyday4 = new Property(15, int.class, "tnb_everyday4", false, "TNB_EVERYDAY4");
        public final static Property Tnb_everyday5 = new Property(16, int.class, "tnb_everyday5", false, "TNB_EVERYDAY5");
        public final static Property Tnb_every_time1 = new Property(17, String.class, "tnb_every_time1", false, "TNB_EVERY_TIME1");
        public final static Property Tnb_every_time2 = new Property(18, String.class, "tnb_every_time2", false, "TNB_EVERY_TIME2");
        public final static Property Tnb_every_time3 = new Property(19, String.class, "tnb_every_time3", false, "TNB_EVERY_TIME3");
        public final static Property Tnb_every_time4 = new Property(20, String.class, "tnb_every_time4", false, "TNB_EVERY_TIME4");
        public final static Property Tnb_every_time5 = new Property(21, String.class, "tnb_every_time5", false, "TNB_EVERY_TIME5");
        public final static Property Tnb_follow_classify = new Property(22, int.class, "tnb_follow_classify", false, "TNB_FOLLOW_CLASSIFY");
        public final static Property Tnb_dxt_reaction = new Property(23, int.class, "tnb_dxt_reaction", false, "TNB_DXT_REACTION");
        public final static Property Tnb_fy_Compliance = new Property(24, int.class, "tnb_fy_Compliance", false, "TNB_FY__COMPLIANCE");
        public final static Property Tnb_Adverse_reaction = new Property(25, int.class, "tnb_Adverse_reaction", false, "TNB__ADVERSE_REACTION");
        public final static Property Tnb_blfy_content = new Property(26, String.class, "tnb_blfy_content", false, "TNB_BLFY_CONTENT");
        public final static Property Tnb_other_inspect1 = new Property(27, String.class, "tnb_other_inspect1", false, "TNB_OTHER_INSPECT1");
        public final static Property Tnb_other_inspect2 = new Property(28, String.class, "tnb_other_inspect2", false, "TNB_OTHER_INSPECT2");
        public final static Property Tnb_other_inspect3 = new Property(29, String.class, "tnb_other_inspect3", false, "TNB_OTHER_INSPECT3");
        public final static Property Tnb_other_inspect4 = new Property(30, String.class, "tnb_other_inspect4", false, "TNB_OTHER_INSPECT4");
        public final static Property Tnb_other_inspect5 = new Property(31, String.class, "tnb_other_inspect5", false, "TNB_OTHER_INSPECT5");
        public final static Property Tnb_Daily_smoking = new Property(32, int.class, "tnb_Daily_smoking", false, "TNB__DAILY_SMOKING");
        public final static Property Tnb_Target_smoking = new Property(33, int.class, "tnb_Target_smoking", false, "TNB__TARGET_SMOKING");
        public final static Property Tnb_yjl_day = new Property(34, int.class, "tnb_yjl_day", false, "TNB_YJL_DAY");
        public final static Property Tnb_target_yjl = new Property(35, int.class, "tnb_target_yjl", false, "TNB_TARGET_YJL");
        public final static Property Bp_id = new Property(36, String.class, "bp_id", false, "BP_ID");
        public final static Property Hw_id = new Property(37, String.class, "hw_id", false, "HW_ID");
        public final static Property Tnb_zbdmbd = new Property(38, int.class, "tnb_zbdmbd", false, "TNB_ZBDMBD");
        public final static Property Tnb_follow_date = new Property(39, String.class, "tnb_follow_date", false, "TNB_FOLLOW_DATE");
        public final static Property Tnb_follow_method = new Property(40, int.class, "tnb_follow_method", false, "TNB_FOLLOW_METHOD");
        public final static Property Symptom_id = new Property(41, int.class, "symptom_id", false, "SYMPTOM_ID");
        public final static Property Tnb_other = new Property(42, String.class, "tnb_other", false, "TNB_OTHER");
        public final static Property Tnb_motion_frequency = new Property(43, int.class, "tnb_motion_frequency", false, "TNB_MOTION_FREQUENCY");
        public final static Property Tnb_motion_min = new Property(44, int.class, "tnb_motion_min", false, "TNB_MOTION_MIN");
        public final static Property Tnb_motion_target = new Property(45, int.class, "tnb_motion_target", false, "TNB_MOTION_TARGET");
        public final static Property Tnb_ydmb_min = new Property(46, int.class, "tnb_ydmb_min", false, "TNB_YDMB_MIN");
        public final static Property Tnb_food = new Property(47, int.class, "tnb_food", false, "TNB_FOOD");
        public final static Property Tnb_food_target = new Property(48, int.class, "tnb_food_target", false, "TNB_FOOD_TARGET");
        public final static Property Tnb_Mental_adjustment = new Property(49, int.class, "tnb_Mental_adjustment", false, "TNB__MENTAL_ADJUSTMENT");
        public final static Property Tnb_Compliance = new Property(50, int.class, "tnb_Compliance", false, "TNB__COMPLIANCE");
        public final static Property Glu_id = new Property(51, String.class, "glu_id", false, "GLU_ID");
        public final static Property CreateDate = new Property(52, String.class, "createDate", false, "CREATE_DATE");
    }


    public TangNiaoBingDao(DaoConfig config) {
        super(config);
    }
    
    public TangNiaoBingDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TANG_NIAO_BING\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"TNB_ID\" TEXT NOT NULL ," + // 1: tnb_id
                "\"NA_ID\" TEXT NOT NULL ," + // 2: na_id
                "\"TNB__REFERRAL\" TEXT," + // 3: tnb_Referral
                "\"TNB__AGENCIES_DEPARTMENTS\" TEXT," + // 4: tnb_Agencies_departments
                "\"TNB_NEXT_FOLLOW\" TEXT," + // 5: tnb_next_follow
                "\"TNB_DOCTOR_FOLLOW\" TEXT," + // 6: tnb_doctor_follow
                "\"TNB__DRUG_USE1\" TEXT," + // 7: tnb_Drug_use1
                "\"TNB__DRUG_USE2\" TEXT," + // 8: tnb_Drug_use2
                "\"TNB__DRUG_USE3\" TEXT," + // 9: tnb_Drug_use3
                "\"TNB__DRUG_USE4\" TEXT," + // 10: tnb_Drug_use4
                "\"TNB__DRUG_USE5\" TEXT," + // 11: tnb_Drug_use5
                "\"TNB_EVERYDAY1\" INTEGER NOT NULL ," + // 12: tnb_everyday1
                "\"TNB_EVERYDAY2\" INTEGER NOT NULL ," + // 13: tnb_everyday2
                "\"TNB_EVERYDAY3\" INTEGER NOT NULL ," + // 14: tnb_everyday3
                "\"TNB_EVERYDAY4\" INTEGER NOT NULL ," + // 15: tnb_everyday4
                "\"TNB_EVERYDAY5\" INTEGER NOT NULL ," + // 16: tnb_everyday5
                "\"TNB_EVERY_TIME1\" TEXT," + // 17: tnb_every_time1
                "\"TNB_EVERY_TIME2\" TEXT," + // 18: tnb_every_time2
                "\"TNB_EVERY_TIME3\" TEXT," + // 19: tnb_every_time3
                "\"TNB_EVERY_TIME4\" TEXT," + // 20: tnb_every_time4
                "\"TNB_EVERY_TIME5\" TEXT," + // 21: tnb_every_time5
                "\"TNB_FOLLOW_CLASSIFY\" INTEGER NOT NULL ," + // 22: tnb_follow_classify
                "\"TNB_DXT_REACTION\" INTEGER NOT NULL ," + // 23: tnb_dxt_reaction
                "\"TNB_FY__COMPLIANCE\" INTEGER NOT NULL ," + // 24: tnb_fy_Compliance
                "\"TNB__ADVERSE_REACTION\" INTEGER NOT NULL ," + // 25: tnb_Adverse_reaction
                "\"TNB_BLFY_CONTENT\" TEXT," + // 26: tnb_blfy_content
                "\"TNB_OTHER_INSPECT1\" TEXT," + // 27: tnb_other_inspect1
                "\"TNB_OTHER_INSPECT2\" TEXT," + // 28: tnb_other_inspect2
                "\"TNB_OTHER_INSPECT3\" TEXT," + // 29: tnb_other_inspect3
                "\"TNB_OTHER_INSPECT4\" TEXT," + // 30: tnb_other_inspect4
                "\"TNB_OTHER_INSPECT5\" TEXT," + // 31: tnb_other_inspect5
                "\"TNB__DAILY_SMOKING\" INTEGER NOT NULL ," + // 32: tnb_Daily_smoking
                "\"TNB__TARGET_SMOKING\" INTEGER NOT NULL ," + // 33: tnb_Target_smoking
                "\"TNB_YJL_DAY\" INTEGER NOT NULL ," + // 34: tnb_yjl_day
                "\"TNB_TARGET_YJL\" INTEGER NOT NULL ," + // 35: tnb_target_yjl
                "\"BP_ID\" TEXT," + // 36: bp_id
                "\"HW_ID\" TEXT," + // 37: hw_id
                "\"TNB_ZBDMBD\" INTEGER NOT NULL ," + // 38: tnb_zbdmbd
                "\"TNB_FOLLOW_DATE\" TEXT," + // 39: tnb_follow_date
                "\"TNB_FOLLOW_METHOD\" INTEGER NOT NULL ," + // 40: tnb_follow_method
                "\"SYMPTOM_ID\" INTEGER NOT NULL ," + // 41: symptom_id
                "\"TNB_OTHER\" TEXT," + // 42: tnb_other
                "\"TNB_MOTION_FREQUENCY\" INTEGER NOT NULL ," + // 43: tnb_motion_frequency
                "\"TNB_MOTION_MIN\" INTEGER NOT NULL ," + // 44: tnb_motion_min
                "\"TNB_MOTION_TARGET\" INTEGER NOT NULL ," + // 45: tnb_motion_target
                "\"TNB_YDMB_MIN\" INTEGER NOT NULL ," + // 46: tnb_ydmb_min
                "\"TNB_FOOD\" INTEGER NOT NULL ," + // 47: tnb_food
                "\"TNB_FOOD_TARGET\" INTEGER NOT NULL ," + // 48: tnb_food_target
                "\"TNB__MENTAL_ADJUSTMENT\" INTEGER NOT NULL ," + // 49: tnb_Mental_adjustment
                "\"TNB__COMPLIANCE\" INTEGER NOT NULL ," + // 50: tnb_Compliance
                "\"GLU_ID\" TEXT," + // 51: glu_id
                "\"CREATE_DATE\" TEXT);"); // 52: createDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TANG_NIAO_BING\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TangNiaoBing entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getTnb_id());
        stmt.bindString(3, entity.getNa_id());
 
        String tnb_Referral = entity.getTnb_Referral();
        if (tnb_Referral != null) {
            stmt.bindString(4, tnb_Referral);
        }
 
        String tnb_Agencies_departments = entity.getTnb_Agencies_departments();
        if (tnb_Agencies_departments != null) {
            stmt.bindString(5, tnb_Agencies_departments);
        }
 
        String tnb_next_follow = entity.getTnb_next_follow();
        if (tnb_next_follow != null) {
            stmt.bindString(6, tnb_next_follow);
        }
 
        String tnb_doctor_follow = entity.getTnb_doctor_follow();
        if (tnb_doctor_follow != null) {
            stmt.bindString(7, tnb_doctor_follow);
        }
 
        String tnb_Drug_use1 = entity.getTnb_Drug_use1();
        if (tnb_Drug_use1 != null) {
            stmt.bindString(8, tnb_Drug_use1);
        }
 
        String tnb_Drug_use2 = entity.getTnb_Drug_use2();
        if (tnb_Drug_use2 != null) {
            stmt.bindString(9, tnb_Drug_use2);
        }
 
        String tnb_Drug_use3 = entity.getTnb_Drug_use3();
        if (tnb_Drug_use3 != null) {
            stmt.bindString(10, tnb_Drug_use3);
        }
 
        String tnb_Drug_use4 = entity.getTnb_Drug_use4();
        if (tnb_Drug_use4 != null) {
            stmt.bindString(11, tnb_Drug_use4);
        }
 
        String tnb_Drug_use5 = entity.getTnb_Drug_use5();
        if (tnb_Drug_use5 != null) {
            stmt.bindString(12, tnb_Drug_use5);
        }
        stmt.bindLong(13, entity.getTnb_everyday1());
        stmt.bindLong(14, entity.getTnb_everyday2());
        stmt.bindLong(15, entity.getTnb_everyday3());
        stmt.bindLong(16, entity.getTnb_everyday4());
        stmt.bindLong(17, entity.getTnb_everyday5());
 
        String tnb_every_time1 = entity.getTnb_every_time1();
        if (tnb_every_time1 != null) {
            stmt.bindString(18, tnb_every_time1);
        }
 
        String tnb_every_time2 = entity.getTnb_every_time2();
        if (tnb_every_time2 != null) {
            stmt.bindString(19, tnb_every_time2);
        }
 
        String tnb_every_time3 = entity.getTnb_every_time3();
        if (tnb_every_time3 != null) {
            stmt.bindString(20, tnb_every_time3);
        }
 
        String tnb_every_time4 = entity.getTnb_every_time4();
        if (tnb_every_time4 != null) {
            stmt.bindString(21, tnb_every_time4);
        }
 
        String tnb_every_time5 = entity.getTnb_every_time5();
        if (tnb_every_time5 != null) {
            stmt.bindString(22, tnb_every_time5);
        }
        stmt.bindLong(23, entity.getTnb_follow_classify());
        stmt.bindLong(24, entity.getTnb_dxt_reaction());
        stmt.bindLong(25, entity.getTnb_fy_Compliance());
        stmt.bindLong(26, entity.getTnb_Adverse_reaction());
 
        String tnb_blfy_content = entity.getTnb_blfy_content();
        if (tnb_blfy_content != null) {
            stmt.bindString(27, tnb_blfy_content);
        }
 
        String tnb_other_inspect1 = entity.getTnb_other_inspect1();
        if (tnb_other_inspect1 != null) {
            stmt.bindString(28, tnb_other_inspect1);
        }
 
        String tnb_other_inspect2 = entity.getTnb_other_inspect2();
        if (tnb_other_inspect2 != null) {
            stmt.bindString(29, tnb_other_inspect2);
        }
 
        String tnb_other_inspect3 = entity.getTnb_other_inspect3();
        if (tnb_other_inspect3 != null) {
            stmt.bindString(30, tnb_other_inspect3);
        }
 
        String tnb_other_inspect4 = entity.getTnb_other_inspect4();
        if (tnb_other_inspect4 != null) {
            stmt.bindString(31, tnb_other_inspect4);
        }
 
        String tnb_other_inspect5 = entity.getTnb_other_inspect5();
        if (tnb_other_inspect5 != null) {
            stmt.bindString(32, tnb_other_inspect5);
        }
        stmt.bindLong(33, entity.getTnb_Daily_smoking());
        stmt.bindLong(34, entity.getTnb_Target_smoking());
        stmt.bindLong(35, entity.getTnb_yjl_day());
        stmt.bindLong(36, entity.getTnb_target_yjl());
 
        String bp_id = entity.getBp_id();
        if (bp_id != null) {
            stmt.bindString(37, bp_id);
        }
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(38, hw_id);
        }
        stmt.bindLong(39, entity.getTnb_zbdmbd());
 
        String tnb_follow_date = entity.getTnb_follow_date();
        if (tnb_follow_date != null) {
            stmt.bindString(40, tnb_follow_date);
        }
        stmt.bindLong(41, entity.getTnb_follow_method());
        stmt.bindLong(42, entity.getSymptom_id());
 
        String tnb_other = entity.getTnb_other();
        if (tnb_other != null) {
            stmt.bindString(43, tnb_other);
        }
        stmt.bindLong(44, entity.getTnb_motion_frequency());
        stmt.bindLong(45, entity.getTnb_motion_min());
        stmt.bindLong(46, entity.getTnb_motion_target());
        stmt.bindLong(47, entity.getTnb_ydmb_min());
        stmt.bindLong(48, entity.getTnb_food());
        stmt.bindLong(49, entity.getTnb_food_target());
        stmt.bindLong(50, entity.getTnb_Mental_adjustment());
        stmt.bindLong(51, entity.getTnb_Compliance());
 
        String glu_id = entity.getGlu_id();
        if (glu_id != null) {
            stmt.bindString(52, glu_id);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(53, createDate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TangNiaoBing entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getTnb_id());
        stmt.bindString(3, entity.getNa_id());
 
        String tnb_Referral = entity.getTnb_Referral();
        if (tnb_Referral != null) {
            stmt.bindString(4, tnb_Referral);
        }
 
        String tnb_Agencies_departments = entity.getTnb_Agencies_departments();
        if (tnb_Agencies_departments != null) {
            stmt.bindString(5, tnb_Agencies_departments);
        }
 
        String tnb_next_follow = entity.getTnb_next_follow();
        if (tnb_next_follow != null) {
            stmt.bindString(6, tnb_next_follow);
        }
 
        String tnb_doctor_follow = entity.getTnb_doctor_follow();
        if (tnb_doctor_follow != null) {
            stmt.bindString(7, tnb_doctor_follow);
        }
 
        String tnb_Drug_use1 = entity.getTnb_Drug_use1();
        if (tnb_Drug_use1 != null) {
            stmt.bindString(8, tnb_Drug_use1);
        }
 
        String tnb_Drug_use2 = entity.getTnb_Drug_use2();
        if (tnb_Drug_use2 != null) {
            stmt.bindString(9, tnb_Drug_use2);
        }
 
        String tnb_Drug_use3 = entity.getTnb_Drug_use3();
        if (tnb_Drug_use3 != null) {
            stmt.bindString(10, tnb_Drug_use3);
        }
 
        String tnb_Drug_use4 = entity.getTnb_Drug_use4();
        if (tnb_Drug_use4 != null) {
            stmt.bindString(11, tnb_Drug_use4);
        }
 
        String tnb_Drug_use5 = entity.getTnb_Drug_use5();
        if (tnb_Drug_use5 != null) {
            stmt.bindString(12, tnb_Drug_use5);
        }
        stmt.bindLong(13, entity.getTnb_everyday1());
        stmt.bindLong(14, entity.getTnb_everyday2());
        stmt.bindLong(15, entity.getTnb_everyday3());
        stmt.bindLong(16, entity.getTnb_everyday4());
        stmt.bindLong(17, entity.getTnb_everyday5());
 
        String tnb_every_time1 = entity.getTnb_every_time1();
        if (tnb_every_time1 != null) {
            stmt.bindString(18, tnb_every_time1);
        }
 
        String tnb_every_time2 = entity.getTnb_every_time2();
        if (tnb_every_time2 != null) {
            stmt.bindString(19, tnb_every_time2);
        }
 
        String tnb_every_time3 = entity.getTnb_every_time3();
        if (tnb_every_time3 != null) {
            stmt.bindString(20, tnb_every_time3);
        }
 
        String tnb_every_time4 = entity.getTnb_every_time4();
        if (tnb_every_time4 != null) {
            stmt.bindString(21, tnb_every_time4);
        }
 
        String tnb_every_time5 = entity.getTnb_every_time5();
        if (tnb_every_time5 != null) {
            stmt.bindString(22, tnb_every_time5);
        }
        stmt.bindLong(23, entity.getTnb_follow_classify());
        stmt.bindLong(24, entity.getTnb_dxt_reaction());
        stmt.bindLong(25, entity.getTnb_fy_Compliance());
        stmt.bindLong(26, entity.getTnb_Adverse_reaction());
 
        String tnb_blfy_content = entity.getTnb_blfy_content();
        if (tnb_blfy_content != null) {
            stmt.bindString(27, tnb_blfy_content);
        }
 
        String tnb_other_inspect1 = entity.getTnb_other_inspect1();
        if (tnb_other_inspect1 != null) {
            stmt.bindString(28, tnb_other_inspect1);
        }
 
        String tnb_other_inspect2 = entity.getTnb_other_inspect2();
        if (tnb_other_inspect2 != null) {
            stmt.bindString(29, tnb_other_inspect2);
        }
 
        String tnb_other_inspect3 = entity.getTnb_other_inspect3();
        if (tnb_other_inspect3 != null) {
            stmt.bindString(30, tnb_other_inspect3);
        }
 
        String tnb_other_inspect4 = entity.getTnb_other_inspect4();
        if (tnb_other_inspect4 != null) {
            stmt.bindString(31, tnb_other_inspect4);
        }
 
        String tnb_other_inspect5 = entity.getTnb_other_inspect5();
        if (tnb_other_inspect5 != null) {
            stmt.bindString(32, tnb_other_inspect5);
        }
        stmt.bindLong(33, entity.getTnb_Daily_smoking());
        stmt.bindLong(34, entity.getTnb_Target_smoking());
        stmt.bindLong(35, entity.getTnb_yjl_day());
        stmt.bindLong(36, entity.getTnb_target_yjl());
 
        String bp_id = entity.getBp_id();
        if (bp_id != null) {
            stmt.bindString(37, bp_id);
        }
 
        String hw_id = entity.getHw_id();
        if (hw_id != null) {
            stmt.bindString(38, hw_id);
        }
        stmt.bindLong(39, entity.getTnb_zbdmbd());
 
        String tnb_follow_date = entity.getTnb_follow_date();
        if (tnb_follow_date != null) {
            stmt.bindString(40, tnb_follow_date);
        }
        stmt.bindLong(41, entity.getTnb_follow_method());
        stmt.bindLong(42, entity.getSymptom_id());
 
        String tnb_other = entity.getTnb_other();
        if (tnb_other != null) {
            stmt.bindString(43, tnb_other);
        }
        stmt.bindLong(44, entity.getTnb_motion_frequency());
        stmt.bindLong(45, entity.getTnb_motion_min());
        stmt.bindLong(46, entity.getTnb_motion_target());
        stmt.bindLong(47, entity.getTnb_ydmb_min());
        stmt.bindLong(48, entity.getTnb_food());
        stmt.bindLong(49, entity.getTnb_food_target());
        stmt.bindLong(50, entity.getTnb_Mental_adjustment());
        stmt.bindLong(51, entity.getTnb_Compliance());
 
        String glu_id = entity.getGlu_id();
        if (glu_id != null) {
            stmt.bindString(52, glu_id);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(53, createDate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TangNiaoBing readEntity(Cursor cursor, int offset) {
        TangNiaoBing entity = new TangNiaoBing( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // tnb_id
            cursor.getString(offset + 2), // na_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // tnb_Referral
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // tnb_Agencies_departments
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // tnb_next_follow
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // tnb_doctor_follow
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // tnb_Drug_use1
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // tnb_Drug_use2
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // tnb_Drug_use3
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // tnb_Drug_use4
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // tnb_Drug_use5
            cursor.getInt(offset + 12), // tnb_everyday1
            cursor.getInt(offset + 13), // tnb_everyday2
            cursor.getInt(offset + 14), // tnb_everyday3
            cursor.getInt(offset + 15), // tnb_everyday4
            cursor.getInt(offset + 16), // tnb_everyday5
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // tnb_every_time1
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // tnb_every_time2
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // tnb_every_time3
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // tnb_every_time4
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // tnb_every_time5
            cursor.getInt(offset + 22), // tnb_follow_classify
            cursor.getInt(offset + 23), // tnb_dxt_reaction
            cursor.getInt(offset + 24), // tnb_fy_Compliance
            cursor.getInt(offset + 25), // tnb_Adverse_reaction
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // tnb_blfy_content
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // tnb_other_inspect1
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // tnb_other_inspect2
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // tnb_other_inspect3
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // tnb_other_inspect4
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // tnb_other_inspect5
            cursor.getInt(offset + 32), // tnb_Daily_smoking
            cursor.getInt(offset + 33), // tnb_Target_smoking
            cursor.getInt(offset + 34), // tnb_yjl_day
            cursor.getInt(offset + 35), // tnb_target_yjl
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // bp_id
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // hw_id
            cursor.getInt(offset + 38), // tnb_zbdmbd
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // tnb_follow_date
            cursor.getInt(offset + 40), // tnb_follow_method
            cursor.getInt(offset + 41), // symptom_id
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // tnb_other
            cursor.getInt(offset + 43), // tnb_motion_frequency
            cursor.getInt(offset + 44), // tnb_motion_min
            cursor.getInt(offset + 45), // tnb_motion_target
            cursor.getInt(offset + 46), // tnb_ydmb_min
            cursor.getInt(offset + 47), // tnb_food
            cursor.getInt(offset + 48), // tnb_food_target
            cursor.getInt(offset + 49), // tnb_Mental_adjustment
            cursor.getInt(offset + 50), // tnb_Compliance
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // glu_id
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52) // createDate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TangNiaoBing entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTnb_id(cursor.getString(offset + 1));
        entity.setNa_id(cursor.getString(offset + 2));
        entity.setTnb_Referral(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTnb_Agencies_departments(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setTnb_next_follow(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setTnb_doctor_follow(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setTnb_Drug_use1(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setTnb_Drug_use2(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setTnb_Drug_use3(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setTnb_Drug_use4(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTnb_Drug_use5(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setTnb_everyday1(cursor.getInt(offset + 12));
        entity.setTnb_everyday2(cursor.getInt(offset + 13));
        entity.setTnb_everyday3(cursor.getInt(offset + 14));
        entity.setTnb_everyday4(cursor.getInt(offset + 15));
        entity.setTnb_everyday5(cursor.getInt(offset + 16));
        entity.setTnb_every_time1(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setTnb_every_time2(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setTnb_every_time3(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setTnb_every_time4(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setTnb_every_time5(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setTnb_follow_classify(cursor.getInt(offset + 22));
        entity.setTnb_dxt_reaction(cursor.getInt(offset + 23));
        entity.setTnb_fy_Compliance(cursor.getInt(offset + 24));
        entity.setTnb_Adverse_reaction(cursor.getInt(offset + 25));
        entity.setTnb_blfy_content(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setTnb_other_inspect1(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setTnb_other_inspect2(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setTnb_other_inspect3(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setTnb_other_inspect4(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setTnb_other_inspect5(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setTnb_Daily_smoking(cursor.getInt(offset + 32));
        entity.setTnb_Target_smoking(cursor.getInt(offset + 33));
        entity.setTnb_yjl_day(cursor.getInt(offset + 34));
        entity.setTnb_target_yjl(cursor.getInt(offset + 35));
        entity.setBp_id(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setHw_id(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setTnb_zbdmbd(cursor.getInt(offset + 38));
        entity.setTnb_follow_date(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setTnb_follow_method(cursor.getInt(offset + 40));
        entity.setSymptom_id(cursor.getInt(offset + 41));
        entity.setTnb_other(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setTnb_motion_frequency(cursor.getInt(offset + 43));
        entity.setTnb_motion_min(cursor.getInt(offset + 44));
        entity.setTnb_motion_target(cursor.getInt(offset + 45));
        entity.setTnb_ydmb_min(cursor.getInt(offset + 46));
        entity.setTnb_food(cursor.getInt(offset + 47));
        entity.setTnb_food_target(cursor.getInt(offset + 48));
        entity.setTnb_Mental_adjustment(cursor.getInt(offset + 49));
        entity.setTnb_Compliance(cursor.getInt(offset + 50));
        entity.setGlu_id(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setCreateDate(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TangNiaoBing entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TangNiaoBing entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TangNiaoBing entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
